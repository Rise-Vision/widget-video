function configure(){}function doneEvent(){source.postMessage({event:"playerEnded"},origin)}function readyEvent(){source.postMessage({event:"playerReady"},origin)}function errorEvent(e){source.postMessage({event:"playerError",error:e},origin)}function playlistItemEvent(e){source.postMessage({event:"playerItemChange",index:e},origin)}function init(e,t){window.oncontextmenu=function(){return!1},width=e.width,height=e.height,controls=e.video.controls,volume=e.video.volume,stretching=e.video.scaleToFit?"uniform":"none",autoPlay=controls?e.video.autoplay:!0,e.video.pause?(e.video.pause="string"==typeof e.video.pause?parseInt(e.video.pause,10):e.video.pause,pauseDuration=isNaN(e.video.pause)?0:e.video.pause):pauseDuration=0,configure(t)}function load(){player.loadVideo()}function play(){player.play()}function pause(){"PLAYING"===player.getState().toUpperCase()&&player.pause()}function stop(){player.stop()}function remove(){player.remove()}function getVideoFileType(e){var t,n=[".mp4",".webm"],o=e.toLowerCase(),r=null;for(t=0;t<=n.length;t+=1)if(-1!==o.indexOf(n[t])){r=n[t].substr(n[t].lastIndexOf(".")+1);break}return r}function configure(e){files=e;var t=function(){var e=playerJW({playlist:getPlaylist(files),width:width,height:height,controls:!1,skin:{name:"rise"},stretching:stretching});return e.onPlayerError=function(e){e&&errorEvent({type:"video",index:jwplayer().getPlaylistIndex(),message:e.message})},e.onSetupError=function(e){e&&errorEvent({type:"setup",index:0,message:e.message})},e.getCurrentIndex=function(){return jwplayer().getPlaylistIndex()},e};player=t()}function getPlaylist(e){for(var t=[],n=0;n<e.length;n+=1)t.push({file:e[n],type:getVideoFileType(e[n])});return t}var controls,volume,autoPlay,stretching,pauseDuration,width,height,player=null,source=null,origin=null,playerJW=function(e){"use strict";function t(){doneEvent()}function n(){g||(clearTimeout(d),d=setTimeout(function(){jwplayer().play(),jwplayer().setControls(!1),jwplayer().setControls(!0)},1e3*pauseDuration))}function o(e){playlistItemEvent(e)}function r(e){e&&errorEvent({type:"video",message:e.message})}function a(e){e&&errorEvent({type:"setup",message:e.message})}function i(){jwplayer("player").setup(e),jwplayer().onSetupError(function(e){a(e)}),jwplayer().on("ready",function(){e.hasOwnProperty("playlist")?(jwplayer().on("playlistComplete",function(){t()}),jwplayer().on("playlistItem",function(e){o(e.index)})):e.hasOwnProperty("file")&&jwplayer().on("complete",function(){t()}),jwplayer().on("error",function(e){r(e)}),controls&&pauseDuration>1&&jwplayer().on("pause",function(){n()}),jwplayer().setVolume(volume),controls&&!autoPlay&&jwplayer().setControls(!0),readyEvent()})}function s(){g=!1,autoPlay&&(controls&&!jwplayer().getControls()&&jwplayer().setControls(!0),jwplayer().play(),controls&&(jwplayer().setControls(!1),jwplayer().setControls(!0)))}function l(){g=!0,clearTimeout(d),jwplayer().pause()}function u(){this.pause()}function p(){g=!1,clearTimeout(d),d=null,jwplayer().remove()}function c(){return jwplayer().getDuration()}function y(){return jwplayer().getPosition()}function f(){return jwplayer().getState()}var g=!1,d=null;return{getDuration:c,getPosition:y,getState:f,loadVideo:i,play:s,pause:l,onPlayerError:r,onSetupError:a,stop:u,remove:p}};window.addEventListener("message",function(e){if(origin=e.origin||e.originalEvent.origin,"http://s3.amazonaws.com"!==origin&&"http://localhost:8000"!==origin)return origin=null,void 0;if(source=e.source,e.data&&"object"==typeof e.data&&e.data.event)switch(e.data.event){case"init":init(e.data.params,e.data.files),load();break;case"play":play();break;case"pause":pause();break;case"stop":stop();break;case"remove":remove()}});var files;
//# sourceMappingURL=data:application/json;base64,
