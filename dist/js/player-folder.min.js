function configure(){}function doneEvent(){window.parent!==window.top&&parent.RiseVision.Video.playerEnded()}function readyEvent(){window.parent!==window.top&&parent.RiseVision.Video.playerReady()}function errorEvent(e){window.parent!==window.top&&parent.RiseVision.Video.playerError(e)}function init(e,n,t){window.oncontextmenu=function(){return!1},width=e.width,height=e.height,skin=t,controls=e.video.controls,volume=e.video.volume,stretching=e.video.scaleToFit?"uniform":"none",autoPlay=controls?e.video.autoplay:!0,e.video.pause?(e.video.pause="string"==typeof e.video.pause?parseInt(e.video.pause,10):e.video.pause,pauseDuration=isNaN(e.video.pause)?0:e.video.pause):pauseDuration=0,configure(n)}function load(){player.loadVideo()}function play(){player.play()}function pause(){player.pause()}function stop(){player.stop()}function remove(){player.remove()}function getVideoFileType(e){var n,t=[".mp4",".webm",".ogg",".ogv"],o=e.toLowerCase(),r=null;for(n=0;n<=t.length;n+=1)if(-1!==o.indexOf(t[n])){r=t[n].substr(t[n].lastIndexOf(".")+1);break}return"ogv"===r&&(r="ogg"),r}function getPlaybackData(){}function configure(e){files=e;var n=function(){var e=playerJW({playlist:getPlaylist(files),width:width,height:height,controls:!1,stretching:stretching,skin:skin});return e.onPlayerError=function(e){e&&errorEvent({type:"video",index:jwplayer().getPlaylistIndex(),message:e.message})},e.onSetupError=function(e){e&&errorEvent({type:"setup",index:0,message:e.message})},e.getCurrentIndex=function(){return jwplayer().getPlaylistIndex()},e};player=n()}function getPlaylist(e){for(var n=[],t=0;t<e.length;t+=1)n.push({sources:[{file:e[t],type:getVideoFileType(e[t])}]});return n}function getPlaybackData(){return{total:files.length,index:player.getCurrentIndex(),duration:player.getDuration(),position:player.getPosition()}}var controls,volume,autoPlay,stretching,pauseDuration,width,height,skin,player=null,playerJW=function(e){"use strict";function n(){doneEvent()}function t(){c||(clearTimeout(d),d=setTimeout(function(){jwplayer().play(),jwplayer().setControls(!1),jwplayer().setControls(!0)},1e3*pauseDuration))}function o(e){e&&errorEvent({type:"video",message:e.message})}function r(e){e&&errorEvent({type:"setup",message:e.message})}function a(){jwplayer("player").setup(e),jwplayer().onSetupError(function(e){instance.onSetupError(e)}),jwplayer().onReady(function(){var r,a=document.getElementById("player").getElementsByTagName("*"),i=a.length;for(r=0;i>r;r+=1)a[r].className+=" notransition";document.getElementById("player").className+=" notransition",document.getElementById("player_menu").className+=" disable-context-menu",e.hasOwnProperty("playlist")?jwplayer().onPlaylistComplete(function(){n()}):e.hasOwnProperty("file")&&jwplayer().onComplete(function(){n()}),jwplayer().onError(function(e){o(e)}),controls&&pauseDuration>1&&jwplayer().onPause(function(){t()}),jwplayer().setVolume(volume),controls&&!autoPlay&&jwplayer().setControls(!0),readyEvent()})}function i(){c=!1,autoPlay&&(controls&&!jwplayer().getControls()&&jwplayer().setControls(!0),jwplayer().play(),controls&&(jwplayer().setControls(!1),jwplayer().setControls(!0)))}function l(){c=!0,clearTimeout(d),jwplayer().pause()}function s(){this.pause()}function u(){c=!1,clearTimeout(d),d=null,jwplayer().remove()}function p(){return jwplayer().getDuration()}function y(){return jwplayer().getPosition()}var c=!1,d=null;return{getDuration:p,getPosition:y,loadVideo:a,play:i,pause:l,onPlayerError:o,onSetupError:r,stop:s,remove:u}},files;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL3BsYXllci1mb2xkZXIubWluLmpzIl0sIm5hbWVzIjpbImNvbmZpZ3VyZSIsImRvbmVFdmVudCIsIndpbmRvdyIsInBhcmVudCIsInRvcCIsIlJpc2VWaXNpb24iLCJWaWRlbyIsInBsYXllckVuZGVkIiwicmVhZHlFdmVudCIsInBsYXllclJlYWR5IiwiZXJyb3JFdmVudCIsImRhdGEiLCJwbGF5ZXJFcnJvciIsImluaXQiLCJwYXJhbXMiLCJ1cmxzIiwic2tpblZhbCIsIm9uY29udGV4dG1lbnUiLCJ3aWR0aCIsImhlaWdodCIsInNraW4iLCJjb250cm9scyIsInZpZGVvIiwidm9sdW1lIiwic3RyZXRjaGluZyIsImF1dG9QbGF5IiwiYXV0b3BsYXkiLCJwYXVzZSIsInBhcnNlSW50IiwicGF1c2VEdXJhdGlvbiIsImlzTmFOIiwibG9hZCIsInBsYXllciIsImxvYWRWaWRlbyIsInBsYXkiLCJzdG9wIiwicmVtb3ZlIiwiZ2V0VmlkZW9GaWxlVHlwZSIsInVybCIsImkiLCJleHRlbnNpb25zIiwidXJsTG93ZXJjYXNlIiwidG9Mb3dlckNhc2UiLCJ0eXBlIiwibGVuZ3RoIiwiaW5kZXhPZiIsInN1YnN0ciIsImxhc3RJbmRleE9mIiwiZ2V0UGxheWJhY2tEYXRhIiwiZmlsZXMiLCJmb2xkZXJQbGF5ZXIiLCJpbnN0YW5jZSIsInBsYXllckpXIiwicGxheWxpc3QiLCJnZXRQbGF5bGlzdCIsIm9uUGxheWVyRXJyb3IiLCJlcnJvciIsImluZGV4IiwiandwbGF5ZXIiLCJnZXRQbGF5bGlzdEluZGV4IiwibWVzc2FnZSIsIm9uU2V0dXBFcnJvciIsImdldEN1cnJlbnRJbmRleCIsImxpc3QiLCJwdXNoIiwic291cmNlcyIsImZpbGUiLCJ0b3RhbCIsImR1cmF0aW9uIiwiZ2V0RHVyYXRpb24iLCJwb3NpdGlvbiIsImdldFBvc2l0aW9uIiwic2V0dXBPYmoiLCJfb25Db21wbGV0ZSIsIl9vblBhdXNlIiwidmlld2VyUGF1c2VkIiwiY2xlYXJUaW1lb3V0IiwicGF1c2VUaW1lciIsInNldFRpbWVvdXQiLCJzZXRDb250cm9scyIsInNldHVwIiwib25SZWFkeSIsImVsZW1lbnRzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiY2xhc3NOYW1lIiwiaGFzT3duUHJvcGVydHkiLCJvblBsYXlsaXN0Q29tcGxldGUiLCJvbkNvbXBsZXRlIiwib25FcnJvciIsIm9uUGF1c2UiLCJzZXRWb2x1bWUiLCJnZXRDb250cm9scyIsInRoaXMiXSwibWFwcGluZ3MiOiJBQU1BLFFBQVNBLGNBRVQsUUFBU0MsYUFDSEMsT0FBT0MsU0FBV0QsT0FBT0UsS0FDM0JELE9BQU9FLFdBQVdDLE1BQU1DLGNBSTVCLFFBQVNDLGNBQ0hOLE9BQU9DLFNBQVdELE9BQU9FLEtBQzNCRCxPQUFPRSxXQUFXQyxNQUFNRyxjQUk1QixRQUFTQyxZQUFXQyxHQUNkVCxPQUFPQyxTQUFXRCxPQUFPRSxLQUMzQkQsT0FBT0UsV0FBV0MsTUFBTU0sWUFBWUQsR0FJeEMsUUFBU0UsTUFBS0MsRUFBUUMsRUFBTUMsR0FDMUJkLE9BQU9lLGNBQWdCLFdBQ3JCLE9BQU8sR0FHVEMsTUFBUUosRUFBT0ksTUFDZkMsT0FBU0wsRUFBT0ssT0FDaEJDLEtBQU9KLEVBQ1BLLFNBQVdQLEVBQU9RLE1BQU1ELFNBQ3hCRSxPQUFTVCxFQUFPUSxNQUFNQyxPQUN0QkMsV0FBY1YsRUFBT1EsTUFBZ0IsV0FBSSxVQUFZLE9BR3JERyxTQUFhSixTQUFtQlAsRUFBT1EsTUFBTUksVUFBcEIsRUFHckJaLEVBQU9RLE1BQU1LLE9BRWZiLEVBQU9RLE1BQU1LLE1BQXVDLGdCQUF2QmIsR0FBT1EsTUFBTUssTUFBc0JDLFNBQVNkLEVBQU9RLE1BQU1LLE1BQU8sSUFBTWIsRUFBT1EsTUFBTUssTUFHaEhFLGNBQWlCQyxNQUFNaEIsRUFBT1EsTUFBTUssT0FBVSxFQUFJYixFQUFPUSxNQUFNSyxPQUcvREUsY0FBZ0IsRUFHbEI3QixVQUFVZSxHQUdaLFFBQVNnQixRQUNQQyxP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LFVBQVlRLGNBQWdCLEdBQzlCNkIsV0FBV2lDLFFBQVEsV0FDakJqQixNQUlKaEIsV0FBV2tDLFVBQVVyRSxRQUVqQkYsV0FBYUksVUFDZmlDLFdBQVdxQixhQUFZLEdBR3pCdkUsZUFLSixRQUFTMEIsS0FDUHlDLEdBQWUsRUFFWGxELFdBQ0VKLFdBQWFxQyxXQUFXbUMsZUFHMUJuQyxXQUFXcUIsYUFBWSxHQUd6QnJCLFdBQVd4QixPQUVQYixXQUVGcUMsV0FBV3FCLGFBQVksR0FDdkJyQixXQUFXcUIsYUFBWSxLQUs3QixRQUFTcEQsS0FDUGdELEdBQWUsRUFDZkMsYUFBYUMsR0FDYm5CLFdBQVcvQixRQUdiLFFBQVNRLEtBQ1AyRCxLQUFLbkUsUUFHUCxRQUFTUyxLQUNQdUMsR0FBZSxFQUNmQyxhQUFhQyxHQUNiQSxFQUFhLEtBQ2JuQixXQUFXdEIsU0FHYixRQUFTaUMsS0FDUCxNQUFPWCxZQUFXVyxjQUdwQixRQUFTRSxLQUNQLE1BQU9iLFlBQVdhLGNBNUlwQixHQUFJSSxJQUFlLEVBQ2ZFLEVBQWEsSUE4SWpCLFFBQ0VSLFlBQWFBLEVBQ2JFLFlBQWFBLEVBQ2J0QyxVQUFXQSxFQUNYQyxLQUFNQSxFQUNOUCxNQUFPQSxFQUNQNEIsY0FBZUEsRUFDZk0sYUFBY0EsRUFDZDFCLEtBQU1BLEVBQ05DLE9BQVFBLElBSVJhIiwiZmlsZSI6ImpzL3BsYXllci1mb2xkZXIubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbnRyb2xzLCB2b2x1bWUsIGF1dG9QbGF5LCBzdHJldGNoaW5nLCBwYXVzZUR1cmF0aW9uO1xudmFyIHdpZHRoLCBoZWlnaHQsIHNraW47XG5cbnZhciBwbGF5ZXIgPSBudWxsO1xuXG4vLyBPVkVSUklERTogbWV0aG9kIHRvIGRpc3Rpbmd1aXNoIGNvbmZpZ3VyYXRpb25zIGJldHdlZW4gZmlsZSBhbmQgZm9sZGVyXG5mdW5jdGlvbiBjb25maWd1cmUodXJscyl7fVxuXG5mdW5jdGlvbiBkb25lRXZlbnQoKSB7XG4gIGlmICh3aW5kb3cucGFyZW50ICE9PSB3aW5kb3cudG9wKSB7XG4gICAgcGFyZW50LlJpc2VWaXNpb24uVmlkZW8ucGxheWVyRW5kZWQoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiByZWFkeUV2ZW50KCkge1xuICBpZiAod2luZG93LnBhcmVudCAhPT0gd2luZG93LnRvcCkge1xuICAgIHBhcmVudC5SaXNlVmlzaW9uLlZpZGVvLnBsYXllclJlYWR5KCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZXJyb3JFdmVudChkYXRhKSB7XG4gIGlmICh3aW5kb3cucGFyZW50ICE9PSB3aW5kb3cudG9wKSB7XG4gICAgcGFyZW50LlJpc2VWaXNpb24uVmlkZW8ucGxheWVyRXJyb3IoZGF0YSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5pdChwYXJhbXMsIHVybHMsIHNraW5WYWwpIHtcbiAgd2luZG93Lm9uY29udGV4dG1lbnUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgd2lkdGggPSBwYXJhbXMud2lkdGg7XG4gIGhlaWdodCA9IHBhcmFtcy5oZWlnaHQ7XG4gIHNraW4gPSBza2luVmFsO1xuICBjb250cm9scyA9IHBhcmFtcy52aWRlby5jb250cm9scztcbiAgdm9sdW1lID0gcGFyYW1zLnZpZGVvLnZvbHVtZTtcbiAgc3RyZXRjaGluZyA9IChwYXJhbXMudmlkZW8uc2NhbGVUb0ZpdCkgPyBcInVuaWZvcm1cIiA6IFwibm9uZVwiO1xuXG4gIC8vIGVuc3VyZSBhdXRvUGxheSBpcyB0cnVlIGlmIGNvbnRyb2xzIHZhbHVlIGlzIGZhbHNlLCBvdGhlcndpc2UgdXNlIHBhcmFtcyB2YWx1ZVxuICBhdXRvUGxheSA9ICghY29udHJvbHMpID8gdHJ1ZSA6IHBhcmFtcy52aWRlby5hdXRvcGxheTtcblxuICAvLyBjaGVjayBpZiB0aGlzIHNldHRpbmcgZXhpc3RzIGR1ZSB0byBtZXJnZSBvZiBmaWxlIGFuZCBmb2xkZXJcbiAgaWYgKHBhcmFtcy52aWRlby5wYXVzZSkge1xuICAgIC8vIGNvbnZlcnQgcGF1c2UgdmFsdWUgdG8gbnVtYmVyIGlmIHR5cGUgaXMgXCJzdHJpbmdcIlxuICAgIHBhcmFtcy52aWRlby5wYXVzZSA9ICh0eXBlb2YgcGFyYW1zLnZpZGVvLnBhdXNlID09PSBcInN0cmluZ1wiKSA/IHBhcnNlSW50KHBhcmFtcy52aWRlby5wYXVzZSwgMTApIDogcGFyYW1zLnZpZGVvLnBhdXNlO1xuXG4gICAgLy8gaWYgbm90IG9mIHR5cGUgXCJudW1iZXJcIiwgc2V0IGl0cyB2YWx1ZSB0byAwIHNvIGEgcGF1c2UgZG9lcyBub3QgZ2V0IGFwcGxpZWRcbiAgICBwYXVzZUR1cmF0aW9uID0gKGlzTmFOKHBhcmFtcy52aWRlby5wYXVzZSkpID8gMCA6IHBhcmFtcy52aWRlby5wYXVzZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBlbnN1cmUgbm8gcGF1c2UgZHVyYXRpb24gb2NjdXJzXG4gICAgcGF1c2VEdXJhdGlvbiA9IDA7XG4gIH1cblxuICBjb25maWd1cmUodXJscyk7XG59XG5cbmZ1bmN0aW9uIGxvYWQoKSB7XG4gIHBsYXllci5sb2FkVmlkZW8oKTtcbn1cblxuZnVuY3Rpb24gcGxheSgpIHtcbiAgcGxheWVyLnBsYXkoKTtcbn1cblxuZnVuY3Rpb24gcGF1c2UoKSB7XG4gIHBsYXllci5wYXVzZSgpO1xufVxuXG5mdW5jdGlvbiBzdG9wKCkge1xuICBwbGF5ZXIuc3RvcCgpO1xufVxuXG5mdW5jdGlvbiByZW1vdmUoKSB7XG4gIHBsYXllci5yZW1vdmUoKTtcbn1cblxuZnVuY3Rpb24gZ2V0VmlkZW9GaWxlVHlwZSAodXJsKSB7XG4gIHZhciBleHRlbnNpb25zID0gW1wiLm1wNFwiLCBcIi53ZWJtXCIsIFwiLm9nZ1wiLCBcIi5vZ3ZcIl0sXG4gICAgdXJsTG93ZXJjYXNlID0gdXJsLnRvTG93ZXJDYXNlKCksXG4gICAgdHlwZSA9IG51bGwsXG4gICAgaTtcblxuICBmb3IgKGkgPSAwOyBpIDw9IGV4dGVuc2lvbnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpZiAodXJsTG93ZXJjYXNlLmluZGV4T2YoZXh0ZW5zaW9uc1tpXSkgIT09IC0xKSB7XG4gICAgICB0eXBlID0gZXh0ZW5zaW9uc1tpXS5zdWJzdHIoZXh0ZW5zaW9uc1tpXS5sYXN0SW5kZXhPZihcIi5cIikgKyAxKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlID09PSBcIm9ndlwiKSB7XG4gICAgdHlwZSA9IFwib2dnXCI7XG4gIH1cblxuICByZXR1cm4gdHlwZTtcbn1cblxuLy8gT1ZFUlJJREU6IG1ldGhvZCB0byByZXRyaWV2ZSBkYXRhIGFib3V0IGZpbGUgb3IgY3VycmVudGx5IHBsYXllZCBmaWxlIGZyb20gZm9sZGVyXG5mdW5jdGlvbiBnZXRQbGF5YmFja0RhdGEoKSB7fVxuXG4vLyBpbmhlcml0IGZyb20gcGxheWVySlcgZm9yIGEgY3VzdG9taXplZCBmaWxlIG9yIGZvbGRlciBwbGF5ZXJcbnZhciBwbGF5ZXJKVyA9IGZ1bmN0aW9uIChzZXR1cE9iaikge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgdmlld2VyUGF1c2VkID0gZmFsc2U7XG4gIHZhciBwYXVzZVRpbWVyID0gbnVsbDtcblxuICBmdW5jdGlvbiBfb25Db21wbGV0ZSgpIHtcbiAgICBkb25lRXZlbnQoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9vblBhdXNlKCkge1xuICAgIGlmICghdmlld2VyUGF1c2VkKSB7XG4gICAgICAvLyB1c2VyIGhhcyBwYXVzZWQsIHNldCBhIHRpbWVyIHRvIHBsYXkgYWdhaW5cbiAgICAgIGNsZWFyVGltZW91dChwYXVzZVRpbWVyKTtcblxuICAgICAgcGF1c2VUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBjb250aW51ZSBwbGF5aW5nIHRoZSBjdXJyZW50IHZpZGVvXG4gICAgICAgIGp3cGxheWVyKCkucGxheSgpO1xuXG4gICAgICAgIC8vIHdvcmthcm91bmQgZm9yIGNvbnRyb2xzIHJlbWFpbmluZyB2aXNpYmxlLCB0dXJuIHRoZW0gb2ZmIGFuZCBvbiBhZ2FpblxuICAgICAgICBqd3BsYXllcigpLnNldENvbnRyb2xzKGZhbHNlKTtcbiAgICAgICAgandwbGF5ZXIoKS5zZXRDb250cm9scyh0cnVlKTtcblxuICAgICAgfSwgcGF1c2VEdXJhdGlvbiAqIDEwMDApO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG9uUGxheWVyRXJyb3IoZXJyb3IpIHtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGVycm9yRXZlbnQoe1xuICAgICAgICB0eXBlOiBcInZpZGVvXCIsXG4gICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2VcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG9uU2V0dXBFcnJvcihlcnJvcikge1xuICAgIGlmIChlcnJvcikge1xuICAgICAgZXJyb3JFdmVudCh7XG4gICAgICAgIHR5cGU6IFwic2V0dXBcIixcbiAgICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gbG9hZFZpZGVvKCkge1xuICAgIGp3cGxheWVyKFwicGxheWVyXCIpLnNldHVwKHNldHVwT2JqKTtcblxuICAgIGp3cGxheWVyKCkub25TZXR1cEVycm9yKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgaW5zdGFuY2Uub25TZXR1cEVycm9yKGVycm9yKTtcbiAgICB9KTtcblxuICAgIGp3cGxheWVyKCkub25SZWFkeShmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZWxlbWVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBsYXllclwiKS5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIiksXG4gICAgICAgIHRvdGFsID0gZWxlbWVudHMubGVuZ3RoLFxuICAgICAgICBpO1xuXG4gICAgICAvLyBXb3JrYXJvdW5kIGZvciBDaHJvbWUgQXBwIFBsYXllciA8d2Vidmlldz4gbm90IGhhbmRsaW5nIENTUzMgdHJhbnNpdGlvblxuICAgICAgZm9yIChpID0gMDsgaSA8IHRvdGFsOyBpICs9IDEpIHtcbiAgICAgICAgZWxlbWVudHNbaV0uY2xhc3NOYW1lICs9IFwiIG5vdHJhbnNpdGlvblwiO1xuICAgICAgfVxuXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBsYXllclwiKS5jbGFzc05hbWUgKz0gXCIgbm90cmFuc2l0aW9uXCI7XG5cbiAgICAgIC8vIEJ1Z2ZpeCAtIGlzc3VlICMzNiAoSldQbGF5ZXIgY29udGV4dCBtZW51KVxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwbGF5ZXJfbWVudVwiKS5jbGFzc05hbWUgKz0gXCIgZGlzYWJsZS1jb250ZXh0LW1lbnVcIjtcblxuICAgICAgaWYgKHNldHVwT2JqLmhhc093blByb3BlcnR5KFwicGxheWxpc3RcIikpIHtcbiAgICAgICAgLy8gZm9sZGVyLCBsaXN0ZW4gZm9yIHBsYXlsaXN0IGNvbXBsZXRlIGV2ZW50XG4gICAgICAgIGp3cGxheWVyKCkub25QbGF5bGlzdENvbXBsZXRlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfb25Db21wbGV0ZSgpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKHNldHVwT2JqLmhhc093blByb3BlcnR5KFwiZmlsZVwiKSkge1xuICAgICAgICAvLyBmaWxlLCBsaXN0ZW4gZm9yIHNpbmdsZSBmaWxlIGNvbXBsZXRlIGV2ZW50XG4gICAgICAgIGp3cGxheWVyKCkub25Db21wbGV0ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX29uQ29tcGxldGUoKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGp3cGxheWVyKCkub25FcnJvcihmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgb25QbGF5ZXJFcnJvcihlcnJvcik7XG4gICAgICB9KTtcblxuICAgICAgaWYgKGNvbnRyb2xzICYmIHBhdXNlRHVyYXRpb24gPiAxKSB7XG4gICAgICAgIGp3cGxheWVyKCkub25QYXVzZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX29uUGF1c2UoKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGp3cGxheWVyKCkuc2V0Vm9sdW1lKHZvbHVtZSk7XG5cbiAgICAgIGlmIChjb250cm9scyAmJiAhYXV0b1BsYXkpIHtcbiAgICAgICAgandwbGF5ZXIoKS5zZXRDb250cm9scyh0cnVlKTtcbiAgICAgIH1cblxuICAgICAgcmVhZHlFdmVudCgpO1xuXG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBwbGF5KCkge1xuICAgIHZpZXdlclBhdXNlZCA9IGZhbHNlO1xuXG4gICAgaWYgKGF1dG9QbGF5KSB7XG4gICAgICBpZiAoY29udHJvbHMgJiYgIWp3cGxheWVyKCkuZ2V0Q29udHJvbHMoKSkge1xuICAgICAgICAvLyBXaWxsIGJlIGZpcnN0IHRpbWUgcGxheWVyIGlzIGJlaW5nIHRvbGQgdG8gcGxheSBzbyBkb2luZyB0aGlzIGhlcmUgYW5kIG5vdCBpbiBzZXR1cCBzbyB0aGF0IGNvbnRyb2xzXG4gICAgICAgIC8vIGFyZW4ndCB2aXNpYmxlIHVwb24gcGxheWluZyBmb3IgdGhlIGZpcnN0IHRpbWUuXG4gICAgICAgIGp3cGxheWVyKCkuc2V0Q29udHJvbHModHJ1ZSk7XG4gICAgICB9XG5cbiAgICAgIGp3cGxheWVyKCkucGxheSgpO1xuXG4gICAgICBpZiAoY29udHJvbHMpIHtcbiAgICAgICAgLy8gd29ya2Fyb3VuZCBmb3IgY29udHJvbHMgcmVtYWluaW5nIHZpc2libGUsIHR1cm4gdGhlbSBvZmYgYW5kIG9uIGFnYWluXG4gICAgICAgIGp3cGxheWVyKCkuc2V0Q29udHJvbHMoZmFsc2UpO1xuICAgICAgICBqd3BsYXllcigpLnNldENvbnRyb2xzKHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHBhdXNlKCkge1xuICAgIHZpZXdlclBhdXNlZCA9IHRydWU7XG4gICAgY2xlYXJUaW1lb3V0KHBhdXNlVGltZXIpO1xuICAgIGp3cGxheWVyKCkucGF1c2UoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgdGhpcy5wYXVzZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgIHZpZXdlclBhdXNlZCA9IGZhbHNlO1xuICAgIGNsZWFyVGltZW91dChwYXVzZVRpbWVyKTtcbiAgICBwYXVzZVRpbWVyID0gbnVsbDtcbiAgICBqd3BsYXllcigpLnJlbW92ZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0RHVyYXRpb24oKSB7XG4gICAgcmV0dXJuIGp3cGxheWVyKCkuZ2V0RHVyYXRpb24oKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFBvc2l0aW9uKCkge1xuICAgIHJldHVybiBqd3BsYXllcigpLmdldFBvc2l0aW9uKCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGdldER1cmF0aW9uOiBnZXREdXJhdGlvbixcbiAgICBnZXRQb3NpdGlvbjogZ2V0UG9zaXRpb24sXG4gICAgbG9hZFZpZGVvOiBsb2FkVmlkZW8sXG4gICAgcGxheTogcGxheSxcbiAgICBwYXVzZTogcGF1c2UsXG4gICAgb25QbGF5ZXJFcnJvcjogb25QbGF5ZXJFcnJvcixcbiAgICBvblNldHVwRXJyb3I6IG9uU2V0dXBFcnJvcixcbiAgICBzdG9wOiBzdG9wLFxuICAgIHJlbW92ZTogcmVtb3ZlXG4gIH1cbn07XG5cbnZhciBmaWxlcztcblxuZnVuY3Rpb24gY29uZmlndXJlKHVybHMpIHtcbiAgZmlsZXMgPSB1cmxzO1xuXG4gIHZhciBmb2xkZXJQbGF5ZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGluc3RhbmNlID0gcGxheWVySlcoe1xuICAgICAgcGxheWxpc3Q6IGdldFBsYXlsaXN0KGZpbGVzKSxcbiAgICAgIHdpZHRoIDogd2lkdGgsXG4gICAgICBoZWlnaHQgOiBoZWlnaHQsXG4gICAgICBjb250cm9sczogZmFsc2UsXG4gICAgICBzdHJldGNoaW5nIDogc3RyZXRjaGluZyxcbiAgICAgIHNraW46IHNraW5cbiAgICB9KTtcblxuICAgIGluc3RhbmNlLm9uUGxheWVyRXJyb3IgPSBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICBlcnJvckV2ZW50KHtcbiAgICAgICAgICB0eXBlOiBcInZpZGVvXCIsXG4gICAgICAgICAgaW5kZXg6IGp3cGxheWVyKCkuZ2V0UGxheWxpc3RJbmRleCgpLFxuICAgICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGluc3RhbmNlLm9uU2V0dXBFcnJvciA9IGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIGVycm9yRXZlbnQoe1xuICAgICAgICAgIHR5cGU6IFwic2V0dXBcIixcbiAgICAgICAgICBpbmRleDogMCxcbiAgICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBpbnN0YW5jZS5nZXRDdXJyZW50SW5kZXggPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBqd3BsYXllcigpLmdldFBsYXlsaXN0SW5kZXgoKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIGluc3RhbmNlO1xuICB9O1xuXG4gIHBsYXllciA9IGZvbGRlclBsYXllcigpO1xufVxuXG5mdW5jdGlvbiBnZXRQbGF5bGlzdCAobGlzdCkge1xuICB2YXIgcGxheWxpc3QgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBwbGF5bGlzdC5wdXNoKHtcbiAgICAgIHNvdXJjZXM6IFt7XG4gICAgICAgIGZpbGU6IGxpc3RbaV0sXG4gICAgICAgIHR5cGU6IGdldFZpZGVvRmlsZVR5cGUobGlzdFtpXSlcbiAgICAgIH1dXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gcGxheWxpc3Q7XG59XG5cbmZ1bmN0aW9uIGdldFBsYXliYWNrRGF0YSgpIHtcbiAgcmV0dXJuIHtcbiAgICB0b3RhbDogZmlsZXMubGVuZ3RoLFxuICAgIGluZGV4OiBwbGF5ZXIuZ2V0Q3VycmVudEluZGV4KCksXG4gICAgZHVyYXRpb246IHBsYXllci5nZXREdXJhdGlvbigpLFxuICAgIHBvc2l0aW9uOiBwbGF5ZXIuZ2V0UG9zaXRpb24oKVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
