function configure(){}function doneEvent(){source.postMessage({event:"playerEnded"},origin)}function readyEvent(){source.postMessage({event:"playerReady"},origin)}function errorEvent(e){source.postMessage({event:"playerError",error:e},origin)}function playlistItemEvent(e){source.postMessage({event:"playerItemChange",index:e},origin)}function init(e,t,n){window.oncontextmenu=function(){return!1},width=e.width,height=e.height,skin=n,controls=e.video.controls,volume=e.video.volume,stretching=e.video.scaleToFit?"uniform":"none",autoPlay=controls?e.video.autoplay:!0,e.video.pause?(e.video.pause="string"==typeof e.video.pause?parseInt(e.video.pause,10):e.video.pause,pauseDuration=isNaN(e.video.pause)?0:e.video.pause):pauseDuration=0,configure(t)}function load(){player.loadVideo()}function play(){player.play()}function pause(){"PLAYING"===player.getState().toUpperCase()&&player.pause()}function stop(){player.stop()}function remove(){player.remove()}function getVideoFileType(e){var t,n=[".mp4",".webm",".ogg",".ogv"],o=e.toLowerCase(),r=null;for(t=0;t<=n.length;t+=1)if(-1!==o.indexOf(n[t])){r=n[t].substr(n[t].lastIndexOf(".")+1);break}return"ogv"===r&&(r="ogg"),r}function configure(e){file=e;var t=function(){return playerJW({file:file,type:getVideoFileType(file),width:width,height:height,controls:!1,stretching:stretching,skin:skin})};player=t()}var controls,volume,autoPlay,stretching,pauseDuration,width,height,skin,player=null,source=null,origin=null,playerJW=function(e){"use strict";function t(){doneEvent()}function n(){g||(clearTimeout(d),d=setTimeout(function(){jwplayer().play(),jwplayer().setControls(!1),jwplayer().setControls(!0)},1e3*pauseDuration))}function o(e){playlistItemEvent(e)}function r(e){e&&errorEvent({type:"video",message:e.message})}function a(e){e&&errorEvent({type:"setup",message:e.message})}function i(){jwplayer("player").setup(e),jwplayer().onSetupError(function(e){a(e)}),jwplayer().onReady(function(){var a,i=document.getElementById("player").getElementsByTagName("*"),l=i.length;for(a=0;l>a;a+=1)i[a].className+=" notransition";document.getElementById("player").className+=" notransition",document.getElementById("player_menu").className+=" disable-context-menu",e.hasOwnProperty("playlist")?(jwplayer().onPlaylistComplete(function(){t()}),jwplayer().onPlaylistItem(function(e){o(e.index)})):e.hasOwnProperty("file")&&jwplayer().onComplete(function(){t()}),jwplayer().onError(function(e){r(e)}),controls&&pauseDuration>1&&jwplayer().onPause(function(){n()}),jwplayer().setVolume(volume),controls&&!autoPlay&&jwplayer().setControls(!0),readyEvent()})}function l(){g=!1,autoPlay&&(controls&&!jwplayer().getControls()&&jwplayer().setControls(!0),jwplayer().play(),controls&&(jwplayer().setControls(!1),jwplayer().setControls(!0)))}function s(){g=!0,clearTimeout(d),jwplayer().pause()}function u(){this.pause()}function p(){g=!1,clearTimeout(d),d=null,jwplayer().remove()}function c(){return jwplayer().getDuration()}function y(){return jwplayer().getPosition()}function f(){return jwplayer().getState()}var g=!1,d=null;return{getDuration:c,getPosition:y,getState:f,loadVideo:i,play:l,pause:s,onPlayerError:r,onSetupError:a,stop:u,remove:p}};window.addEventListener("message",function(e){if(origin=e.origin||e.originalEvent.origin,"http://s3.amazonaws.com"!==origin&&"http://localhost:8000"!==origin)return origin=null,void 0;if(source=e.source,e.data&&"object"==typeof e.data&&e.data.event)switch(e.data.event){case"init":init(e.data.params,e.data.files,e.data.skin),load();break;case"play":play();break;case"pause":pause();break;case"stop":stop();break;case"remove":remove()}});var file;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL3BsYXllci1maWxlLm1pbi5qcyJdLCJuYW1lcyI6WyJjb25maWd1cmUiLCJkb25lRXZlbnQiLCJzb3VyY2UiLCJwb3N0TWVzc2FnZSIsImV2ZW50Iiwib3JpZ2luIiwicmVhZHlFdmVudCIsImVycm9yRXZlbnQiLCJkYXRhIiwiZXJyb3IiLCJwbGF5bGlzdEl0ZW1FdmVudCIsImluZGV4IiwiaW5pdCIsInBhcmFtcyIsInVybHMiLCJza2luVmFsIiwid2luZG93Iiwib25jb250ZXh0bWVudSIsIndpZHRoIiwiaGVpZ2h0Iiwic2tpbiIsImNvbnRyb2xzIiwidmlkZW8iLCJ2b2x1bWUiLCJzdHJldGNoaW5nIiwiYXV0b1BsYXkiLCJhdXRvcGxheSIsInBhdXNlIiwicGFyc2VJbnQiLCJwYXVzZUR1cmF0aW9uIiwiaXNOYU4iLCJsb2FkIiwicGxheWVyIiwibG9hZFZpZGVvIiwicGxheSIsImdldFN0YXRlIiwidG9VcHBlckNhc2UiLCJzdG9wIiwicmVtb3ZlIiwiZ2V0VmlkZW9GaWxlVHlwZSIsInVybCIsImkiLCJleHRlbnNpb25zIiwidXJsTG93ZXJjYXNlIiwidG9Mb3dlckNhc2UiLCJ0eXBlIiwibGVuZ3RoIiwiaW5kZXhPZiIsInN1YnN0ciIsImxhc3RJbmRleE9mIiwiZmlsZSIsImZpbGVQbGF5ZXIiLCJwbGF5ZXJKVyIsInNldHVwT2JqIiwiX29uQ29tcGxldGUiLCJfb25QYXVzZSIsInZpZXdlclBhdXNlZCIsImNsZWFyVGltZW91dCIsInBhdXNlVGltZXIiLCJzZXRUaW1lb3V0IiwiandwbGF5ZXIiLCJzZXRDb250cm9scyIsIl9vblBsYXlsaXN0SXRlbSIsIm9uUGxheWVyRXJyb3IiLCJtZXNzYWdlIiwib25TZXR1cEVycm9yIiwic2V0dXAiLCJvblJlYWR5IiwiZWxlbWVudHMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJ0b3RhbCIsImNsYXNzTmFtZSIsImhhc093blByb3BlcnR5Iiwib25QbGF5bGlzdENvbXBsZXRlIiwib25QbGF5bGlzdEl0ZW0iLCJvbkNvbXBsZXRlIiwib25FcnJvciIsIm9uUGF1c2UiLCJzZXRWb2x1bWUiLCJnZXRDb250cm9scyIsInRoaXMiLCJnZXREdXJhdGlvbiIsImdldFBvc2l0aW9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9yaWdpbmFsRXZlbnQiLCJmaWxlcyJdLCJtYXBwaW5ncyI6IkFBU0EsUUFBU0EsY0FFVCxRQUFTQyxhQUNQQyxPQUFPQyxhQUNMQyxNQUFPLGVBQ05DLFFBR0wsUUFBU0MsY0FDUEosT0FBT0MsYUFDTEMsTUFBTyxlQUNOQyxRQUlMLFFBQVNFLFlBQVdDLEdBQ2xCTixPQUFPQyxhQUNMQyxNQUFPLGNBQ1BLLE1BQU9ELEdBQ05ILFFBR0wsUUFBU0ssbUJBQWtCQyxHQUN6QlQsT0FBT0MsYUFDTEMsTUFBTyxtQkFDUE8sTUFBT0EsR0FDTk4sUUFHTCxRQUFTTyxNQUFLQyxFQUFRQyxFQUFNQyxHQUMxQkMsT0FBT0MsY0FBZ0IsV0FDckIsT0FBTyxHQUdUQyxNQUFRTCxFQUFPSyxNQUNmQyxPQUFTTixFQUFPTSxPQUNoQkMsS0FBT0wsRUFDUE0sU0FBV1IsRUFBT1MsTUFBTUQsU0FDeEJFLE9BQVNWLEVBQU9TLE1BQU1DLE9BQ3RCQyxXQUFjWCxFQUFPUyxNQUFnQixXQUFJLFVBQVksT0FHckRHLFNBQWFKLFNBQW1CUixFQUFPUyxNQUFNSSxVQUFwQixFQUdyQmIsRUFBT1MsTUFBTUssT0FFZmQsRUFBT1MsTUFBTUssTUFBdUMsZ0JBQXZCZCxHQUFPUyxNQUFNSyxNQUFzQkMsU0FBU2YsRUFBT1MsTUFBTUssTUFBTyxJQUFNZCxFQUFPUyxNQUFNSyxNQUdoSEUsY0FBaUJDLE1BQU1qQixFQUFPUyxNQUFNSyxPQUFVLEVBQUlkLEVBQU9TLE1BQU1LLE9BRy9ERSxjQUFnQixFQUdsQjdCLFVBQVVjLEdBR1osUUFBU2lCLFFBQ1BDLE9BQU9DLFlBR1QsUUFBU0MsUUFDUEYsT0FBT0UsT0FHVCxRQUFTUCxTQUVpQyxZQUFwQ0ssT0FBT0cs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QUFPeEIsWUFBV3dCLGNBR3BCLFFBQVNqRCxLQUNQLE1BQU95QixZQUFXekIsV0F6SnBCLEdBQUlxQixJQUFlLEVBQ2ZFLEVBQWEsSUEySmpCLFFBQ0V5QixZQUFhQSxFQUNiQyxZQUFhQSxFQUNiakQsU0FBVUEsRUFDVkYsVUFBV0EsRUFDWEMsS0FBTUEsRUFDTlAsTUFBT0EsRUFDUG9DLGNBQWVBLEVBQ2ZFLGFBQWNBLEVBQ2Q1QixLQUFNQSxFQUNOQyxPQUFRQSxHQUladEIsUUFBT3FFLGlCQUFpQixVQUFXLFNBQVNqRixHQUkxQyxHQUhBQyxPQUFTRCxFQUFNQyxRQUFVRCxFQUFNa0YsY0FBY2pGLE9BRzlCLDRCQUFYQSxRQUFtRCwwQkFBWEEsT0FFMUMsTUFEQUEsUUFBUyxLQUNULE1BS0YsSUFGQUgsT0FBU0UsRUFBTUYsT0FFWEUsRUFBTUksTUFBOEIsZ0JBQWZKLEdBQU1JLE1BQXFCSixFQUFNSSxLQUFLSixNQUM3RCxPQUFRQSxFQUFNSSxLQUFLSixPQUNqQixJQUFLLE9BQ0hRLEtBQUtSLEVBQU1JLEtBQUtLLE9BQVFULEVBQU1JLEtBQUsrRSxNQUFPbkYsRUFBTUksS0FBS1ksTUFDckRXLE1BRUEsTUFDRixLQUFLLE9BQ0hHLE1BQ0EsTUFDRixLQUFLLFFBQ0hQLE9BQ0EsTUFDRixLQUFLLE9BQ0hVLE1BQ0EsTUFDRixLQUFLLFNBQ0hDLFdBTVIsSUFBSVkiLCJmaWxlIjoianMvcGxheWVyLWZpbGUubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbnRyb2xzLCB2b2x1bWUsIGF1dG9QbGF5LCBzdHJldGNoaW5nLCBwYXVzZUR1cmF0aW9uO1xudmFyIHdpZHRoLCBoZWlnaHQsIHNraW47XG5cbnZhciBwbGF5ZXIgPSBudWxsO1xuXG52YXIgc291cmNlID0gbnVsbCxcbiAgb3JpZ2luID0gbnVsbDtcblxuLy8gT1ZFUlJJREU6IG1ldGhvZCB0byBkaXN0aW5ndWlzaCBjb25maWd1cmF0aW9ucyBiZXR3ZWVuIGZpbGUgYW5kIGZvbGRlclxuZnVuY3Rpb24gY29uZmlndXJlKHVybHMpe31cblxuZnVuY3Rpb24gZG9uZUV2ZW50KCkge1xuICBzb3VyY2UucG9zdE1lc3NhZ2Uoe1xuICAgIGV2ZW50OiBcInBsYXllckVuZGVkXCJcbiAgfSwgb3JpZ2luKTtcbn1cblxuZnVuY3Rpb24gcmVhZHlFdmVudCgpIHtcbiAgc291cmNlLnBvc3RNZXNzYWdlKHtcbiAgICBldmVudDogXCJwbGF5ZXJSZWFkeVwiXG4gIH0sIG9yaWdpbik7XG5cbn1cblxuZnVuY3Rpb24gZXJyb3JFdmVudChkYXRhKSB7XG4gIHNvdXJjZS5wb3N0TWVzc2FnZSh7XG4gICAgZXZlbnQ6IFwicGxheWVyRXJyb3JcIixcbiAgICBlcnJvcjogZGF0YVxuICB9LCBvcmlnaW4pO1xufVxuXG5mdW5jdGlvbiBwbGF5bGlzdEl0ZW1FdmVudChpbmRleCkge1xuICBzb3VyY2UucG9zdE1lc3NhZ2Uoe1xuICAgIGV2ZW50OiBcInBsYXllckl0ZW1DaGFuZ2VcIixcbiAgICBpbmRleDogaW5kZXhcbiAgfSwgb3JpZ2luKTtcbn1cblxuZnVuY3Rpb24gaW5pdChwYXJhbXMsIHVybHMsIHNraW5WYWwpIHtcbiAgd2luZG93Lm9uY29udGV4dG1lbnUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgd2lkdGggPSBwYXJhbXMud2lkdGg7XG4gIGhlaWdodCA9IHBhcmFtcy5oZWlnaHQ7XG4gIHNraW4gPSBza2luVmFsO1xuICBjb250cm9scyA9IHBhcmFtcy52aWRlby5jb250cm9scztcbiAgdm9sdW1lID0gcGFyYW1zLnZpZGVvLnZvbHVtZTtcbiAgc3RyZXRjaGluZyA9IChwYXJhbXMudmlkZW8uc2NhbGVUb0ZpdCkgPyBcInVuaWZvcm1cIiA6IFwibm9uZVwiO1xuXG4gIC8vIGVuc3VyZSBhdXRvUGxheSBpcyB0cnVlIGlmIGNvbnRyb2xzIHZhbHVlIGlzIGZhbHNlLCBvdGhlcndpc2UgdXNlIHBhcmFtcyB2YWx1ZVxuICBhdXRvUGxheSA9ICghY29udHJvbHMpID8gdHJ1ZSA6IHBhcmFtcy52aWRlby5hdXRvcGxheTtcblxuICAvLyBjaGVjayBpZiB0aGlzIHNldHRpbmcgZXhpc3RzIGR1ZSB0byBtZXJnZSBvZiBmaWxlIGFuZCBmb2xkZXJcbiAgaWYgKHBhcmFtcy52aWRlby5wYXVzZSkge1xuICAgIC8vIGNvbnZlcnQgcGF1c2UgdmFsdWUgdG8gbnVtYmVyIGlmIHR5cGUgaXMgXCJzdHJpbmdcIlxuICAgIHBhcmFtcy52aWRlby5wYXVzZSA9ICh0eXBlb2YgcGFyYW1zLnZpZGVvLnBhdXNlID09PSBcInN0cmluZ1wiKSA/IHBhcnNlSW50KHBhcmFtcy52aWRlby5wYXVzZSwgMTApIDogcGFyYW1zLnZpZGVvLnBhdXNlO1xuXG4gICAgLy8gaWYgbm90IG9mIHR5cGUgXCJudW1iZXJcIiwgc2V0IGl0cyB2YWx1ZSB0byAwIHNvIGEgcGF1c2UgZG9lcyBub3QgZ2V0IGFwcGxpZWRcbiAgICBwYXVzZUR1cmF0aW9uID0gKGlzTmFOKHBhcmFtcy52aWRlby5wYXVzZSkpID8gMCA6IHBhcmFtcy52aWRlby5wYXVzZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBlbnN1cmUgbm8gcGF1c2UgZHVyYXRpb24gb2NjdXJzXG4gICAgcGF1c2VEdXJhdGlvbiA9IDA7XG4gIH1cblxuICBjb25maWd1cmUodXJscyk7XG59XG5cbmZ1bmN0aW9uIGxvYWQoKSB7XG4gIHBsYXllci5sb2FkVmlkZW8oKTtcbn1cblxuZnVuY3Rpb24gcGxheSgpIHtcbiAgcGxheWVyLnBsYXkoKTtcbn1cblxuZnVuY3Rpb24gcGF1c2UoKSB7XG4gIC8vIE9ubHkgcGF1c2UgdmlkZW8gaWYgaXQncyBhY3R1YWxseSBwbGF5aW5nLlxuICBpZiAocGxheWVyLmdldFN0YXRlKCkudG9VcHBlckNhc2UoKSA9PT0gXCJQTEFZSU5HXCIpIHtcbiAgICBwbGF5ZXIucGF1c2UoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzdG9wKCkge1xuICBwbGF5ZXIuc3RvcCgpO1xufVxuXG5mdW5jdGlvbiByZW1vdmUoKSB7XG4gIHBsYXllci5yZW1vdmUoKTtcbn1cblxuZnVuY3Rpb24gZ2V0VmlkZW9GaWxlVHlwZSAodXJsKSB7XG4gIHZhciBleHRlbnNpb25zID0gW1wiLm1wNFwiLCBcIi53ZWJtXCIsIFwiLm9nZ1wiLCBcIi5vZ3ZcIl0sXG4gICAgdXJsTG93ZXJjYXNlID0gdXJsLnRvTG93ZXJDYXNlKCksXG4gICAgdHlwZSA9IG51bGwsXG4gICAgaTtcblxuICBmb3IgKGkgPSAwOyBpIDw9IGV4dGVuc2lvbnMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpZiAodXJsTG93ZXJjYXNlLmluZGV4T2YoZXh0ZW5zaW9uc1tpXSkgIT09IC0xKSB7XG4gICAgICB0eXBlID0gZXh0ZW5zaW9uc1tpXS5zdWJzdHIoZXh0ZW5zaW9uc1tpXS5sYXN0SW5kZXhPZihcIi5cIikgKyAxKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlID09PSBcIm9ndlwiKSB7XG4gICAgdHlwZSA9IFwib2dnXCI7XG4gIH1cblxuICByZXR1cm4gdHlwZTtcbn1cblxuLy8gaW5oZXJpdCBmcm9tIHBsYXllckpXIGZvciBhIGN1c3RvbWl6ZWQgZmlsZSBvciBmb2xkZXIgcGxheWVyXG52YXIgcGxheWVySlcgPSBmdW5jdGlvbiAoc2V0dXBPYmopIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIHZpZXdlclBhdXNlZCA9IGZhbHNlO1xuICB2YXIgcGF1c2VUaW1lciA9IG51bGw7XG5cbiAgZnVuY3Rpb24gX29uQ29tcGxldGUoKSB7XG4gICAgZG9uZUV2ZW50KCk7XG4gIH1cblxuICBmdW5jdGlvbiBfb25QYXVzZSgpIHtcbiAgICBpZiAoIXZpZXdlclBhdXNlZCkge1xuICAgICAgLy8gdXNlciBoYXMgcGF1c2VkLCBzZXQgYSB0aW1lciB0byBwbGF5IGFnYWluXG4gICAgICBjbGVhclRpbWVvdXQocGF1c2VUaW1lcik7XG5cbiAgICAgIHBhdXNlVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gY29udGludWUgcGxheWluZyB0aGUgY3VycmVudCB2aWRlb1xuICAgICAgICBqd3BsYXllcigpLnBsYXkoKTtcblxuICAgICAgICAvLyB3b3JrYXJvdW5kIGZvciBjb250cm9scyByZW1haW5pbmcgdmlzaWJsZSwgdHVybiB0aGVtIG9mZiBhbmQgb24gYWdhaW5cbiAgICAgICAgandwbGF5ZXIoKS5zZXRDb250cm9scyhmYWxzZSk7XG4gICAgICAgIGp3cGxheWVyKCkuc2V0Q29udHJvbHModHJ1ZSk7XG5cbiAgICAgIH0sIHBhdXNlRHVyYXRpb24gKiAxMDAwKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBfb25QbGF5bGlzdEl0ZW0oaW5kZXgpIHtcbiAgICBwbGF5bGlzdEl0ZW1FdmVudChpbmRleCk7XG4gIH1cblxuICBmdW5jdGlvbiBvblBsYXllckVycm9yKGVycm9yKSB7XG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBlcnJvckV2ZW50KHtcbiAgICAgICAgdHlwZTogXCJ2aWRlb1wiLFxuICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBvblNldHVwRXJyb3IoZXJyb3IpIHtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGVycm9yRXZlbnQoe1xuICAgICAgICB0eXBlOiBcInNldHVwXCIsXG4gICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2VcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGxvYWRWaWRlbygpIHtcbiAgICBqd3BsYXllcihcInBsYXllclwiKS5zZXR1cChzZXR1cE9iaik7XG5cbiAgICBqd3BsYXllcigpLm9uU2V0dXBFcnJvcihmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIG9uU2V0dXBFcnJvcihlcnJvcik7XG4gICAgfSk7XG5cbiAgICBqd3BsYXllcigpLm9uUmVhZHkoZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGVsZW1lbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwbGF5ZXJcIikuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpLFxuICAgICAgICB0b3RhbCA9IGVsZW1lbnRzLmxlbmd0aCxcbiAgICAgICAgaTtcblxuICAgICAgLy8gV29ya2Fyb3VuZCBmb3IgQ2hyb21lIEFwcCBQbGF5ZXIgPHdlYnZpZXc+IG5vdCBoYW5kbGluZyBDU1MzIHRyYW5zaXRpb25cbiAgICAgIGZvciAoaSA9IDA7IGkgPCB0b3RhbDsgaSArPSAxKSB7XG4gICAgICAgIGVsZW1lbnRzW2ldLmNsYXNzTmFtZSArPSBcIiBub3RyYW5zaXRpb25cIjtcbiAgICAgIH1cblxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwbGF5ZXJcIikuY2xhc3NOYW1lICs9IFwiIG5vdHJhbnNpdGlvblwiO1xuXG4gICAgICAvLyBCdWdmaXggLSBpc3N1ZSAjMzYgKEpXUGxheWVyIGNvbnRleHQgbWVudSlcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGxheWVyX21lbnVcIikuY2xhc3NOYW1lICs9IFwiIGRpc2FibGUtY29udGV4dC1tZW51XCI7XG5cbiAgICAgIGlmIChzZXR1cE9iai5oYXNPd25Qcm9wZXJ0eShcInBsYXlsaXN0XCIpKSB7XG4gICAgICAgIC8vIGZvbGRlciwgbGlzdGVuIGZvciBwbGF5bGlzdCBjb21wbGV0ZSBldmVudFxuICAgICAgICBqd3BsYXllcigpLm9uUGxheWxpc3RDb21wbGV0ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX29uQ29tcGxldGUoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gZm9sZGVyLCBsaXN0ZW4gZm9yIHdoZW4gYSBwbGF5bGlzdCBpdGVtIGNoYW5nZXNcbiAgICAgICAgandwbGF5ZXIoKS5vblBsYXlsaXN0SXRlbShmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgIF9vblBsYXlsaXN0SXRlbShkYXRhLmluZGV4KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChzZXR1cE9iai5oYXNPd25Qcm9wZXJ0eShcImZpbGVcIikpIHtcbiAgICAgICAgLy8gZmlsZSwgbGlzdGVuIGZvciBzaW5nbGUgZmlsZSBjb21wbGV0ZSBldmVudFxuICAgICAgICBqd3BsYXllcigpLm9uQ29tcGxldGUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF9vbkNvbXBsZXRlKCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBqd3BsYXllcigpLm9uRXJyb3IoZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgIG9uUGxheWVyRXJyb3IoZXJyb3IpO1xuICAgICAgfSk7XG5cbiAgICAgIGlmIChjb250cm9scyAmJiBwYXVzZUR1cmF0aW9uID4gMSkge1xuICAgICAgICBqd3BsYXllcigpLm9uUGF1c2UoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF9vblBhdXNlKCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBqd3BsYXllcigpLnNldFZvbHVtZSh2b2x1bWUpO1xuXG4gICAgICBpZiAoY29udHJvbHMgJiYgIWF1dG9QbGF5KSB7XG4gICAgICAgIGp3cGxheWVyKCkuc2V0Q29udHJvbHModHJ1ZSk7XG4gICAgICB9XG5cbiAgICAgIHJlYWR5RXZlbnQoKTtcblxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcGxheSgpIHtcbiAgICB2aWV3ZXJQYXVzZWQgPSBmYWxzZTtcblxuICAgIGlmIChhdXRvUGxheSkge1xuICAgICAgaWYgKGNvbnRyb2xzICYmICFqd3BsYXllcigpLmdldENvbnRyb2xzKCkpIHtcbiAgICAgICAgLy8gV2lsbCBiZSBmaXJzdCB0aW1lIHBsYXllciBpcyBiZWluZyB0b2xkIHRvIHBsYXkgc28gZG9pbmcgdGhpcyBoZXJlIGFuZCBub3QgaW4gc2V0dXAgc28gdGhhdCBjb250cm9sc1xuICAgICAgICAvLyBhcmVuJ3QgdmlzaWJsZSB1cG9uIHBsYXlpbmcgZm9yIHRoZSBmaXJzdCB0aW1lLlxuICAgICAgICBqd3BsYXllcigpLnNldENvbnRyb2xzKHRydWUpO1xuICAgICAgfVxuXG4gICAgICBqd3BsYXllcigpLnBsYXkoKTtcblxuICAgICAgaWYgKGNvbnRyb2xzKSB7XG4gICAgICAgIC8vIHdvcmthcm91bmQgZm9yIGNvbnRyb2xzIHJlbWFpbmluZyB2aXNpYmxlLCB0dXJuIHRoZW0gb2ZmIGFuZCBvbiBhZ2FpblxuICAgICAgICBqd3BsYXllcigpLnNldENvbnRyb2xzKGZhbHNlKTtcbiAgICAgICAgandwbGF5ZXIoKS5zZXRDb250cm9scyh0cnVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwYXVzZSgpIHtcbiAgICB2aWV3ZXJQYXVzZWQgPSB0cnVlO1xuICAgIGNsZWFyVGltZW91dChwYXVzZVRpbWVyKTtcbiAgICBqd3BsYXllcigpLnBhdXNlKCk7XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuICAgIHRoaXMucGF1c2UoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICB2aWV3ZXJQYXVzZWQgPSBmYWxzZTtcbiAgICBjbGVhclRpbWVvdXQocGF1c2VUaW1lcik7XG4gICAgcGF1c2VUaW1lciA9IG51bGw7XG4gICAgandwbGF5ZXIoKS5yZW1vdmUoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldER1cmF0aW9uKCkge1xuICAgIHJldHVybiBqd3BsYXllcigpLmdldER1cmF0aW9uKCk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRQb3NpdGlvbigpIHtcbiAgICByZXR1cm4gandwbGF5ZXIoKS5nZXRQb3NpdGlvbigpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0U3RhdGUoKSB7XG4gICAgcmV0dXJuIGp3cGxheWVyKCkuZ2V0U3RhdGUoKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZ2V0RHVyYXRpb246IGdldER1cmF0aW9uLFxuICAgIGdldFBvc2l0aW9uOiBnZXRQb3NpdGlvbixcbiAgICBnZXRTdGF0ZTogZ2V0U3RhdGUsXG4gICAgbG9hZFZpZGVvOiBsb2FkVmlkZW8sXG4gICAgcGxheTogcGxheSxcbiAgICBwYXVzZTogcGF1c2UsXG4gICAgb25QbGF5ZXJFcnJvcjogb25QbGF5ZXJFcnJvcixcbiAgICBvblNldHVwRXJyb3I6IG9uU2V0dXBFcnJvcixcbiAgICBzdG9wOiBzdG9wLFxuICAgIHJlbW92ZTogcmVtb3ZlXG4gIH1cbn07XG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBmdW5jdGlvbihldmVudCkge1xuICBvcmlnaW4gPSBldmVudC5vcmlnaW4gfHwgZXZlbnQub3JpZ2luYWxFdmVudC5vcmlnaW47XG5cbiAgLy8gZW5zdXJlIHRoaXMgbWVzc2FnZSBpcyBjb21pbmcgZnJvbSBBbWF6b24gUzMgKHdpZGdldCkgb3IgcHJldmlldyBhcHAgKGxvY2FsIHdpZGdldClcbiAgaWYgKG9yaWdpbiAhPT0gXCJodHRwOi8vczMuYW1hem9uYXdzLmNvbVwiICYmIG9yaWdpbiAhPT0gXCJodHRwOi8vbG9jYWxob3N0OjgwMDBcIikge1xuICAgIG9yaWdpbiA9IG51bGw7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc291cmNlID0gZXZlbnQuc291cmNlO1xuXG4gIGlmIChldmVudC5kYXRhICYmIHR5cGVvZiBldmVudC5kYXRhID09PSBcIm9iamVjdFwiICYmIGV2ZW50LmRhdGEuZXZlbnQpIHtcbiAgICBzd2l0Y2ggKGV2ZW50LmRhdGEuZXZlbnQpIHtcbiAgICAgIGNhc2UgXCJpbml0XCIgOlxuICAgICAgICBpbml0KGV2ZW50LmRhdGEucGFyYW1zLCBldmVudC5kYXRhLmZpbGVzLCBldmVudC5kYXRhLnNraW4pO1xuICAgICAgICBsb2FkKCk7XG5cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwicGxheVwiOlxuICAgICAgICBwbGF5KCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInBhdXNlXCI6XG4gICAgICAgIHBhdXNlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInN0b3BcIjpcbiAgICAgICAgc3RvcCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJyZW1vdmVcIjpcbiAgICAgICAgcmVtb3ZlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxufSk7XG5cbnZhciBmaWxlO1xuXG5mdW5jdGlvbiBjb25maWd1cmUodXJscyl7XG4gIGZpbGUgPSB1cmxzO1xuXG4gIHZhciBmaWxlUGxheWVyID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBwbGF5ZXJKVyh7XG4gICAgICBmaWxlOiBmaWxlLFxuICAgICAgdHlwZTogZ2V0VmlkZW9GaWxlVHlwZShmaWxlKSxcbiAgICAgIHdpZHRoIDogd2lkdGgsXG4gICAgICBoZWlnaHQgOiBoZWlnaHQsXG4gICAgICBjb250cm9sczogZmFsc2UsXG4gICAgICBzdHJldGNoaW5nIDogc3RyZXRjaGluZyxcbiAgICAgIHNraW46IHNraW5cbiAgICB9KTtcbiAgfTtcblxuICBwbGF5ZXIgPSBmaWxlUGxheWVyKCk7XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
