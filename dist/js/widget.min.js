if("undefined"==typeof config){var config={SKIN:"/rise-common/scripts/jw-player/skins/six.xml"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.RiseCache=function(){"use strict";function e(){return"http://localhost:9494/?url="}function n(e){var n=new XMLHttpRequest;e&&"function"!=typeof e||(n.open("GET","http://localhost:9494/ping",!0),n.onreadystatechange=function(){try{4===n.readyState&&(200===n.status?e(!0,n.responseText):(console.debug("Rise Cache is not running"),e(!1,null)))}catch(i){console.debug("Caught exception: ",i.description)}},n.send())}return{ping:n,getUrl:e}}();var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e,n){"use strict";function i(){n.rpc.call("","rsevent_done",null,f.getString("id"))}function t(){n.rpc.call("","rsevent_ready",null,f.getString("id"),!0,!0,!0,!0,!0)}function o(){d=RiseVision.Video.Player,d.init(g)}function s(){d.pause()}function a(){p?(p=!1,g.video.autoplay?d.play():d.play(!0)):d.play()}function r(){t()}function l(i,t){Array.isArray(i)&&i.length>0&&"additionalParams"===i[0]&&Array.isArray(t)&&t.length>0&&(g=JSON.parse(t[0]),f=new n.Prefs,e.getElementById("videoContainer").style.height=f.getInt("rsH")+"px",g.width=f.getInt("rsW"),g.height=f.getInt("rsH"),m=new RiseVision.Common.Background(g),m.init(o))}function c(){s()}function u(){i()}var d,g,f=null,m=null,p=!0;return{pause:s,play:a,setAdditionalParams:l,playerReady:r,stop:c,videoEnded:u}}(document,gadgets);var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Background=function(e){"use strict";function n(){setTimeout(function(){r.style.backgroundImage="url("+e.background.image.url+d+"cb="+(new Date).getTime()+")",n()},c)}function i(){a=!0,e.background.useImage&&!u&&n(),s&&"function"==typeof s&&s()}function t(){var n;r=document.getElementById("background"),l=document.getElementById("backgroundStorage"),document.body.style.background=e.background.color,r?e.background.useImage?(r.className=e.background.image.position,r.className=e.background.image.scale?r.className+" scale-to-fit":r.className,u=0!==Object.keys(e.backgroundStorage).length,u?l?(l.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.files&&e.detail.files.length>0&&(r.style.backgroundImage="url("+e.detail.files[0].url+")"),a||i()}),l.setAttribute("folder",e.backgroundStorage.folder),l.setAttribute("fileName",e.backgroundStorage.fileName),l.setAttribute("companyId",e.backgroundStorage.companyId),l.go()):console.log("Missing element with id value of 'backgroundStorage'"):(n=e.background.image.url.split("?"),d=1===n.length?"?":"&",r.style.backgroundImage="url("+e.background.image.url+")",i())):i():console.log("Missing element with id value of 'background'")}function o(e){a?e&&"function"==typeof e&&e():(e&&(s=e),t())}var s=null,a=!1,r=null,l=null,c=9e5,u=!1,d="";return{init:o}};var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Player=function(e,n,i,t){"use strict";function o(e){var n,i=[".mp4",".webm",".ogg",".ogv"],t=e.toLowerCase(),o=null;for(n=0;n<=i.length;n+=1)if(-1!==t.indexOf(i[n])){o=i[n].substr(i[n].lastIndexOf(".")+1);break}return"ogv"===o&&(o="ogg"),o}function s(){setTimeout(function(){A=!0},N)}function a(){var e;S?(e=o(I),A=!1,console.debug("Refresh, JW Player load: ",[I,e]),n().load([{file:I,type:e}])):(e=o(h),i.ping(function(t){P=t,A=!1,console.debug("Refresh, JW Player load: ",[P?i.getUrl()+encodeURIComponent(h):h,e]),n().load([{file:P?i.getUrl()+encodeURIComponent(h):h,type:e}]),s()}))}function r(){console.debug("JW Player video complete"),RiseVision.Video.videoEnded()}function l(){w&&(w=!1,S||s()),C=!1}function c(){n().setMute(!1),n().setVolume(R),RiseVision.Video.playerReady()}function u(e){console.debug("JW Player Error - ",e),C=!0,w&&(w=!1,S||s()),RiseVision.Video.videoEnded()}function d(){var s,a;e.getElementById("videoJW").style.visibility="hidden",S?(s=I,a=o(I)):(s=P?i.getUrl()+encodeURIComponent(h):h,a=o(h)),console.debug("JW Player setup: ",[s,a]),n("videoJW").setup({file:s,type:a,width:k,height:E,controls:!b,mute:!0,stretching:V?"uniform":"none",primary:"html5",skin:t.SKIN,events:{onReady:function(e){c(e)},onComplete:function(e){r(e)},onError:function(e){u(e)},onPlay:function(e){l(e)}}})}function g(e){console.debug("Rise Storage response - ",e),e.detail&&e.detail.files&&e.detail.files.length>0&&(I=e.detail.files[0].url,w?d():A=!0)}function f(n){var t,o=e.getElementById("videoJW"),s=e.getElementById("videoStorage");o&&s&&(b=n.video.autoplay,R=n.video.volume,V=n.video.scaleToFit,h=n.url,k=n.width,E=n.height,S=0!==Object.keys(n.videoStorage).length,S?(s.addEventListener("rise-storage-response",g),s.setAttribute("folder",n.videoStorage.folder),s.setAttribute("fileName",n.videoStorage.fileName),s.setAttribute("companyId",n.videoStorage.companyId),s.go()):(t=h.split("?"),_=1===t.length?"?":"&",i.ping(function(e){P=e,d()})))}function m(){var i=n().getState();("BUFFERING"===i||"PLAYING"===i)&&n().pause(!0),e.getElementById("videoJW").style.visibility="hidden",A&&a()}function p(i){e.getElementById("videoJW").style.visibility="visible",C?RiseVision.Video.videoEnded():i||(n().getPosition()>0?(n().seek(0),n().play(!0)):n().play(!0))}function y(){n().remove()}function v(){m()}var b,R,V,h,I,k,E,S,w=!0,C=!1,_="",P=!1,A=!1,N=9e5;return{init:f,pause:m,play:p,remove:y,stop:v}}(document,jwplayer,RiseVision.Common.RiseCache,config),function(e,n){"use strict";function i(){RiseVision.Video.play()}function t(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}var s=new n.Prefs,a=s.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("polymer-ready",function(){a&&""!==a&&(n.rpc.register("rscmd_play_"+a,i),n.rpc.register("rscmd_pause_"+a,t),n.rpc.register("rscmd_stop_"+a,o),n.rpc.register("rsparam_set_"+a,RiseVision.Video.setAdditionalParams),n.rpc.call("","rsparam_get",null,a,["additionalParams"]))})}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)}();
//# sourceMappingURL=data:application/json;base64,