if("undefined"==typeof config){var config={};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e,n){"use strict";function o(){n.rpc.call("","rsevent_done",null,u.getString("id"))}function i(){n.rpc.call("","rsevent_ready",null,u.getString("id"),!0,!0,!0,!0,!0)}function t(){RiseVision.Video.Player.ping(g)}function a(){RiseVision.Video.Player.pause()}function s(){g.video.autoplay&&RiseVision.Video.Player.play()}function r(){i()}function l(o){u=new n.Prefs,g=o,e.getElementById("videoContainer").style.height=u.getInt("rsH")+"px",p=new RiseVision.Common.Background(g),p.init(t)}function d(){RiseVision.Video.Player.pause()}function c(){o()}var u=null,g={},p=null;return{pause:a,play:s,setAdditionalParams:l,playerReady:r,stop:d,videoEnded:c}}(document,gadgets);var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Background=function(e){"use strict";function n(){setTimeout(function(){r.style.backgroundImage="url("+e.background.image.url+u+"cb="+(new Date).getTime()+")",n()},d)}function o(){s=!0,e.background.useImage&&!c&&n(),a&&"function"==typeof a&&a()}function i(){var n;r=document.getElementById("background"),l=document.getElementById("backgroundStorage"),document.body.style.background=e.background.color,r?e.background.useImage?(r.className=e.background.image.position,r.className=e.background.image.scale?r.className+" scale-to-fit":r.className,c=0!==Object.keys(e.backgroundStorage).length,c?l?(l.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.files&&e.detail.files.length>0&&(r.style.backgroundImage="url("+e.detail.files[0].url+")"),s||o()}),l.setAttribute("folder",e.backgroundStorage.folder),l.setAttribute("fileName",e.backgroundStorage.fileName),l.setAttribute("companyId",e.backgroundStorage.companyId),l.go()):console.log("Missing element with id value of 'backgroundStorage'"):(n=e.background.image.url.split("?"),u=1===n.length?"?":"&",r.style.backgroundImage="url("+e.background.image.url+")",o())):o():console.log("Missing element with id value of 'background'")}function t(e){s?e&&"function"==typeof e&&e():(e&&(a=e),i())}var a=null,s=!1,r=null,l=null,d=9e5,c=!1,u="";return{init:t}};var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Player=function(e,n){"use strict";function o(){console.log("player::_onCanPlayThrough");var n=e.getElementById("video");n.removeEventListener("canplaythrough",o,!1),p||(RiseVision.Video.playerReady(),p=!0)}function i(){console.log("player::_onEnded");var n,o=e.getElementById("video");o.pause(),n=o.seekable.start(0),console.debug(n),o.currentTime=n,o.pause(),RiseVision.Video.videoEnded()}function t(n){console.log("player::_onRiseStorageResponse"),console.dir(n);var o=e.getElementById("video");n.detail&&n.detail.files&&n.detail.files.length>0&&(o.setAttribute("src",n.detail.files[0].url),o.load())}function a(n){console.log("player::init");var i=e.getElementById("video"),a=e.getElementById("videoStorage");i&&a&&(c=u?"http://localhost:9494/?url="+encodeURIComponent(n.url):n.url,n.video.autoplay||i.setAttribute("controls",""),i.className=n.video.scaleToFit?i.className+" scale-to-fit":i.className+" no-scale",i.volume=n.video.volume/100,i.addEventListener("canplaythrough",o,!1),g=0!==Object.keys(n.videoStorage).length,g?(a.addEventListener("rise-storage-response",t),a.setAttribute("folder",n.videoStorage.folder),a.setAttribute("fileName",n.videoStorage.fileName),a.setAttribute("companyId",n.videoStorage.companyId),a.go()):(i.setAttribute("src",c),i.load()))}function s(){var n=e.getElementById("video");return!n||"undefined"==typeof n.pause||n.paused||n.ended?!1:!0}function r(){console.log("player::pause()");var n=e.getElementById("video");n&&"undefined"!=typeof n.pause&&(n.removeEventListener("ended",i,!1),s()&&n.pause())}function l(e){console.log("player::ping()"),n.ajax({url:"http://localhost:9494/ping",cache:!1,success:function(){a(e)},error:function(){u=!1,a(e)}})}function d(){console.log("player::play()");var n=e.getElementById("video");n&&"undefined"!=typeof n.pause&&(n.addEventListener("ended",i,!1),n.play())}var c=null,u=!0,g=!1,p=!1;return{init:a,pause:r,play:d,isVideoPlaying:s,ping:l}}(document,jQuery),function(e,n){"use strict";function o(){RiseVision.Video.play()}function i(){RiseVision.Video.pause()}function t(){RiseVision.Video.stop()}function a(e,n){Array.isArray(e)&&e.length>0&&"additionalParams"===e[0]&&Array.isArray(n)&&n.length>0&&RiseVision.Video.setAdditionalParams(JSON.parse(n[0]))}var s=new n.Prefs,r=s.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("polymer-ready",function(){r&&""!==r&&(n.rpc.register("rscmd_play_"+r,o),n.rpc.register("rscmd_pause_"+r,i),n.rpc.register("rscmd_stop_"+r,t),n.rpc.register("rsparam_set_"+r,a),n.rpc.call("","rsparam_get",null,r,["additionalParams"]))})}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL3dpZGdldC5taW4uanMiXSwibmFtZXMiOlsiY29uZmlnIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbnN0YW50IiwiUmlzZVZpc2lvbiIsIlZpZGVvIiwiZG9jdW1lbnQiLCJnYWRnZXRzIiwiX2RvbmUiLCJycGMiLCJjYWxsIiwiX3ByZWZzIiwiZ2V0U3RyaW5nIiwiX3JlYWR5IiwiX2JhY2tncm91bmRSZWFkeSIsIlBsYXllciIsInBpbmciLCJfYWRkaXRpb25hbFBhcmFtcyIsInBhdXNlIiwicGxheSIsInZpZGVvIiwiYXV0b3BsYXkiLCJwbGF5ZXJSZWFkeSIsInNldEFkZGl0aW9uYWxQYXJhbXMiLCJwYXJhbXMiLCJQcmVmcyIsImdldEVsZW1lbnRCeUlkIiwic3R5bGUiLCJoZWlnaHQiLCJnZXRJbnQiLCJfYmFja2dyb3VuZCIsIkNvbW1vbiIsIkJhY2tncm91bmQiLCJpbml0Iiwic3RvcCIsInZpZGVvRW5kZWQiLCJkYXRhIiwiX3JlZnJlc2hUaW1lciIsInNldFRpbWVvdXQiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJiYWNrZ3JvdW5kIiwiaW1hZ2UiLCJ1cmwiLCJfc2VwYXJhdG9yIiwiRGF0ZSIsImdldFRpbWUiLCJfcmVmcmVzaER1cmF0aW9uIiwidXNlSW1hZ2UiLCJfaXNTdG9yYWdlRmlsZSIsIl9jYWxsYmFjayIsIl9jb25maWd1cmUiLCJzdHIiLCJfc3RvcmFnZSIsImJvZHkiLCJjb2xvciIsImNsYXNzTmFtZSIsInBvc2l0aW9uIiwic2NhbGUiLCJPYmplY3QiLCJrZXlzIiwiYmFja2dyb3VuZFN0b3JhZ2UiLCJsZW5ndGgiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImRldGFpbCIsImZpbGVzIiwic2V0QXR0cmlidXRlIiwiZm9sZGVyIiwiZmlsZU5hbWUiLCJjb21wYW55SWQiLCJnbyIsImNvbnNvbGUiLCJsb2ciLCJzcGxpdCIsImNiIiwiJCIsIl9vbkNhblBsYXlUaHJvdWdoIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl9ub3RpZmllZFJlYWR5IiwiX29uRW5kZWQiLCJzdGFydFRpbWUiLCJzZWVrYWJsZSIsInN0YXJ0IiwiZGVidWciLCJjdXJyZW50VGltZSIsIl9vblJpc2VTdG9yYWdlUmVzcG9uc2UiLCJkaXIiLCJsb2FkIiwic3RvcmFnZSIsIl92aWRlb1VybCIsImVuY29kZVVSSUNvbXBvbmVudCIsInNjYWxlVG9GaXQiLCJ2b2x1bWUiLCJ2aWRlb1N0b3JhZ2UiLCJpc1ZpZGVvUGxheWluZyIsInBhdXNlZCIsImVuZGVkIiwiYWpheCIsImNhY2hlIiwic3VjY2VzcyIsImVycm9yIiwiX3Jpc2VDYWNoZVJ1bm5pbmciLCJqUXVlcnkiLCJ3aW5kb3ciLCJhZGRpdGlvbmFsUGFyYW1zIiwibmFtZXMiLCJ2YWx1ZXMiLCJBcnJheSIsImlzQXJyYXkiLCJKU09OIiwicGFyc2UiLCJwcmVmcyIsImlkIiwib25jb250ZXh0bWVudSIsInJlZ2lzdGVyIiwiX2dhcSIsInB1c2giLCJnYSIsImNyZWF0ZUVsZW1lbnQiLCJ0eXBlIiwiYXN5bmMiLCJzcmMiLCJsb2NhdGlvbiIsInByb3RvY29sIiwicyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicGFyZW50Tm9kZSIsImluc2VydEJlZm9yZSJdLCJtYXBwaW5ncyI6IkFBRUEsR0FBc0IsbUJBQVhBLFFBQXdCLENBQ2pDLEdBQUlBLFVBSW1CLG9CQUFaQyxVQUNUQSxRQUFRQyxPQUFPLG9DQUNaQyxTQUFTLGlCQUFrQix3QkFDM0JBLFNBQVMsZ0JBQWlCLFNBTWpDLEdBQUlDLFlBQWFBLGNBQ2pCQSxZQUFXQyxTQUVYRCxXQUFXQyxNQUFRLFNBQVdDLEVBQVVDLEdBQ3RDLFlBU0EsU0FBU0MsS0FDUEQsRUFBUUUsSUFBSUMsS0FBSyxHQUFJLGVBQWdCLEtBQU1DLEVBQU9DLFVBQVUsT0FJOUQsUUFBU0MsS0FDUE4sRUFBUUUsSUFBSUMsS0FBSyxHQUFJLGdCQUFpQixLQUFNQyxFQUFPQyxVQUFVLE9BQzNELEdBQU0sR0FBTSxHQUFNLEdBQU0sR0FHNUIsUUFBU0UsS0FHUFYsV0FBV0MsTUFB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Z0IsNkJBQ25GLElBQUlDLEdBQUl0SCxTQUFTdUgscUJBQXFCLFVBQVUsRUFBSUQsR0FBRUUsV0FBV0MsYUFBYVYsRUFBSU8iLCJmaWxlIjoianMvd2lkZ2V0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBjb25maWc6IHRydWUgKi9cbi8qIGV4cG9ydGVkIGNvbmZpZyAqL1xuaWYgKHR5cGVvZiBjb25maWcgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgdmFyIGNvbmZpZyA9IHtcbiAgICAvLyB2YXJpYWJsZXMgZ28gaGVyZVxuICB9O1xuXG4gIGlmICh0eXBlb2YgYW5ndWxhciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGFuZ3VsYXIubW9kdWxlKFwicmlzZXZpc2lvbi5jb21tb24uaTE4bi5jb25maWdcIiwgW10pXG4gICAgICAuY29uc3RhbnQoXCJMT0NBTEVTX1BSRUZJWFwiLCBcImxvY2FsZXMvdHJhbnNsYXRpb25fXCIpXG4gICAgICAuY29uc3RhbnQoXCJMT0NBTEVTX1NVRklYXCIsIFwiLmpzb25cIik7XG4gIH1cbn1cblxuLyogZ2xvYmFsIGdhZGdldHMgKi9cblxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuUmlzZVZpc2lvbi5WaWRlbyA9IHt9O1xuXG5SaXNlVmlzaW9uLlZpZGVvID0gKGZ1bmN0aW9uIChkb2N1bWVudCwgZ2FkZ2V0cykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgX3ByZWZzID0gbnVsbCxcbiAgICBfYWRkaXRpb25hbFBhcmFtcyA9IHt9LFxuICAgIF9iYWNrZ3JvdW5kID0gbnVsbDtcblxuICAvKlxuICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBfZG9uZSgpIHtcbiAgICBnYWRnZXRzLnJwYy5jYWxsKFwiXCIsIFwicnNldmVudF9kb25lXCIsIG51bGwsIF9wcmVmcy5nZXRTdHJpbmcoXCJpZFwiKSk7XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIF9yZWFkeSgpIHtcbiAgICBnYWRnZXRzLnJwYy5jYWxsKFwiXCIsIFwicnNldmVudF9yZWFkeVwiLCBudWxsLCBfcHJlZnMuZ2V0U3RyaW5nKFwiaWRcIiksXG4gICAgICB0cnVlLCB0cnVlLCB0cnVlLCB0cnVlLCB0cnVlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9iYWNrZ3JvdW5kUmVhZHkoKSB7XG4gICAgLy8gSW5pdGlhbGl6ZSB0aGUgUGxheWVyIGluc3RhbmNlXG4gICAgLy9SaXNlVmlzaW9uLlZpZGVvLlBsYXllci5pbml0KF9hZGRpdGlvbmFsUGFyYW1zKTtcbiAgICBSaXNlVmlzaW9uLlZpZGVvLlBsYXllci5waW5nKF9hZGRpdGlvbmFsUGFyYW1zKTtcbiAgfVxuXG4gIC8qXG4gICAqICBQdWJsaWMgTWV0aG9kc1xuICAgKi9cbiAgZnVuY3Rpb24gcGF1c2UoKSB7XG4gICAgUmlzZVZpc2lvbi5WaWRlby5QbGF5ZXIucGF1c2UoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBsYXkoKSB7XG4gICAgLy8gXCJhdXRvcGxheVwiIHdhcyBzZWxlY3RlZCBpbiBzZXR0aW5nc1xuICAgIGlmIChfYWRkaXRpb25hbFBhcmFtcy52aWRlby5hdXRvcGxheSkge1xuICAgICAgUmlzZVZpc2lvbi5WaWRlby5QbGF5ZXIucGxheSgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHBsYXllclJlYWR5KCkge1xuICAgIF9yZWFkeSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gc2V0QWRkaXRpb25hbFBhcmFtcyhwYXJhbXMpIHtcbiAgICBfcHJlZnMgPSBuZXcgZ2FkZ2V0cy5QcmVmcygpO1xuICAgIF9hZGRpdGlvbmFsUGFyYW1zID0gcGFyYW1zO1xuXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWRlb0NvbnRhaW5lclwiKS5zdHlsZS5oZWlnaHQgPSBfcHJlZnMuZ2V0SW50KFwicnNIXCIpICsgXCJweFwiO1xuXG4gICAgLy8gY3JlYXRlIGFuZCBpbml0aWFsaXplIHRoZSBCYWNrZ3JvdW5kIGluc3RhbmNlXG4gICAgX2JhY2tncm91bmQgPSBuZXcgUmlzZVZpc2lvbi5Db21tb24uQmFja2dyb3VuZChfYWRkaXRpb25hbFBhcmFtcyk7XG4gICAgX2JhY2tncm91bmQuaW5pdChfYmFja2dyb3VuZFJlYWR5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL1Jpc2UtVmlzaW9uL3ZpZXdlci9pc3N1ZXMvMzBcbiAgICAvLyBIYXZlIHRvIGNhbGwgcGF1c2UoKSBvbiB0aGUgcGxheWVyIGR1ZSB0byBWaWV3ZXIgaXNzdWVcbiAgICBSaXNlVmlzaW9uLlZpZGVvLlBsYXllci5wYXVzZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gdmlkZW9FbmRlZCgpIHtcbiAgICBfZG9uZSgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBcInBhdXNlXCI6IHBhdXNlLFxuICAgIFwicGxheVwiOiBwbGF5LFxuICAgIFwic2V0QWRkaXRpb25hbFBhcmFtc1wiOiBzZXRBZGRpdGlvbmFsUGFyYW1zLFxuICAgIFwicGxheWVyUmVhZHlcIjogcGxheWVyUmVhZHksXG4gICAgXCJzdG9wXCI6IHN0b3AsXG4gICAgXCJ2aWRlb0VuZGVkXCI6IHZpZGVvRW5kZWRcbiAgfTtcblxufSkoZG9jdW1lbnQsIGdhZGdldHMpO1xuXG52YXIgUmlzZVZpc2lvbiA9IFJpc2VWaXNpb24gfHwge307XG5SaXNlVmlzaW9uLkNvbW1vbiA9IFJpc2VWaXNpb24uQ29tbW9uIHx8IHt9O1xuXG5SaXNlVmlzaW9uLkNvbW1vbi5CYWNrZ3JvdW5kID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIF9jYWxsYmFjayA9IG51bGwsXG4gICAgX3JlYWR5ID0gZmFsc2UsXG4gICAgX2JhY2tncm91bmQgPSBudWxsLFxuICAgIF9zdG9yYWdlID0gbnVsbCxcbiAgICBfcmVmcmVzaER1cmF0aW9uID0gOTAwMDAwLCAvLyAxNSBtaW51dGVzXG4gICAgX2lzU3RvcmFnZUZpbGUgPSBmYWxzZSxcbiAgICBfc2VwYXJhdG9yID0gXCJcIjtcblxuICAvKlxuICAgKiBQcml2YXRlIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIF9yZWZyZXNoVGltZXIoKSB7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbiBiYWNrZ3JvdW5kUmVmcmVzaCgpIHtcbiAgICAgIF9iYWNrZ3JvdW5kLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IFwidXJsKFwiICsgZGF0YS5iYWNrZ3JvdW5kLmltYWdlLnVybCArIF9zZXBhcmF0b3IgKyBcImNiPVwiICsgbmV3IERhdGUoKS5nZXRUaW1lKCkgKyBcIilcIjtcbiAgICAgIF9yZWZyZXNoVGltZXIoKTtcbiAgICB9LCBfcmVmcmVzaER1cmF0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9iYWNrZ3JvdW5kUmVhZHkoKSB7XG4gICAgX3JlYWR5ID0gdHJ1ZTtcblxuICAgIGlmIChkYXRhLmJhY2tncm91bmQudXNlSW1hZ2UgJiYgIV9pc1N0b3JhZ2VGaWxlKSB7XG4gICAgICAvLyBzdGFydCB0aGUgcmVmcmVzaCBwb2xsIGZvciBub24tc3RvcmFnZSBiYWNrZ3JvdW5kIGltYWdlXG4gICAgICBfcmVmcmVzaFRpbWVyKCk7XG4gICAgfVxuXG4gICAgaWYgKF9jYWxsYmFjayAmJiB0eXBlb2YgX2NhbGxiYWNrID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIF9jYWxsYmFjaygpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9jb25maWd1cmUoKSB7XG4gICAgdmFyIHN0cjtcblxuICAgIF9iYWNrZ3JvdW5kID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYWNrZ3JvdW5kXCIpO1xuICAgIF9zdG9yYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYWNrZ3JvdW5kU3RvcmFnZVwiKTtcblxuICAgIC8vIHNldCB0aGUgZG9jdW1lbnQgYmFja2dyb3VuZFxuICAgIGRvY3VtZW50LmJvZHkuc3R5bGUuYmFja2dyb3VuZCA9IGRhdGEuYmFja2dyb3VuZC5jb2xvcjtcblxuICAgIGlmIChfYmFja2dyb3VuZCkge1xuICAgICAgaWYgKGRhdGEuYmFja2dyb3VuZC51c2VJbWFnZSkge1xuICAgICAgICBfYmFja2dyb3VuZC5jbGFzc05hbWUgPSBkYXRhLmJhY2tncm91bmQuaW1hZ2UucG9zaXRpb247XG4gICAgICAgIF9iYWNrZ3JvdW5kLmNsYXNzTmFtZSA9IGRhdGEuYmFja2dyb3VuZC5pbWFnZS5zY2FsZSA/IF9iYWNrZ3JvdW5kLmNsYXNzTmFtZSArIFwiIHNjYWxlLXRvLWZpdFwiXG4gICAgICAgICAgOiBfYmFja2dyb3VuZC5jbGFzc05hbWU7XG5cbiAgICAgICAgX2lzU3RvcmFnZUZpbGUgPSAoT2JqZWN0LmtleXMoZGF0YS5iYWNrZ3JvdW5kU3RvcmFnZSkubGVuZ3RoICE9PSAwKTtcblxuICAgICAgICBpZiAoIV9pc1N0b3JhZ2VGaWxlKSB7XG4gICAgICAgICAgc3RyID0gZGF0YS5iYWNrZ3JvdW5kLmltYWdlLnVybC5zcGxpdChcIj9cIik7XG5cbiAgICAgICAgICAvLyBzdG9yZSB0aGlzIGZvciB0aGUgcmVmcmVzaCB0aW1lclxuICAgICAgICAgIF9zZXBhcmF0b3IgPSAoc3RyLmxlbmd0aCA9PT0gMSkgPyBcIj9cIiA6IFwiJlwiO1xuXG4gICAgICAgICAgX2JhY2tncm91bmQuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gXCJ1cmwoXCIgKyBkYXRhLmJhY2tncm91bmQuaW1hZ2UudXJsICsgXCIpXCI7XG4gICAgICAgICAgX2JhY2tncm91bmRSZWFkeSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChfc3RvcmFnZSkge1xuICAgICAgICAgICAgLy8gUmlzZSBTdG9yYWdlXG4gICAgICAgICAgICBfc3RvcmFnZS5hZGRFdmVudExpc3RlbmVyKFwicmlzZS1zdG9yYWdlLXJlc3BvbnNlXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgIGlmIChlLmRldGFpbCAmJiBlLmRldGFpbC5maWxlcyAmJiBlLmRldGFpbC5maWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgX2JhY2tncm91bmQuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gXCJ1cmwoXCIgKyBlLmRldGFpbC5maWxlc1swXS51cmwgKyBcIilcIjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghX3JlYWR5KSB7XG4gICAgICAgICAgICAgICAgX2JhY2tncm91bmRSZWFkeSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgX3N0b3JhZ2Uuc2V0QXR0cmlidXRlKFwiZm9sZGVyXCIsIGRhdGEuYmFja2dyb3VuZFN0b3JhZ2UuZm9sZGVyKTtcbiAgICAgICAgICAgIF9zdG9yYWdlLnNldEF0dHJpYnV0ZShcImZpbGVOYW1lXCIsIGRhdGEuYmFja2dyb3VuZFN0b3JhZ2UuZmlsZU5hbWUpO1xuICAgICAgICAgICAgX3N0b3JhZ2Uuc2V0QXR0cmlidXRlKFwiY29tcGFueUlkXCIsIGRhdGEuYmFja2dyb3VuZFN0b3JhZ2UuY29tcGFueUlkKTtcbiAgICAgICAgICAgIF9zdG9yYWdlLmdvKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTWlzc2luZyBlbGVtZW50IHdpdGggaWQgdmFsdWUgb2YgJ2JhY2tncm91bmRTdG9yYWdlJ1wiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF9iYWNrZ3JvdW5kUmVhZHkoKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coXCJNaXNzaW5nIGVsZW1lbnQgd2l0aCBpZCB2YWx1ZSBvZiAnYmFja2dyb3VuZCdcIik7XG4gICAgfVxuICB9XG5cbiAgLypcbiAgICogIFB1YmxpYyBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBpbml0KGNiKSB7XG4gICAgaWYgKCFfcmVhZHkpIHtcbiAgICAgIGlmIChjYikge1xuICAgICAgICBfY2FsbGJhY2sgPSBjYjtcbiAgICAgIH1cblxuICAgICAgX2NvbmZpZ3VyZSgpO1xuXG4gICAgfSBlbHNlIGlmIChjYiAmJiB0eXBlb2YgY2IgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgY2IoKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIFwiaW5pdFwiOiBpbml0XG4gIH07XG59O1xuXG52YXIgUmlzZVZpc2lvbiA9IFJpc2VWaXNpb24gfHwge307XG5SaXNlVmlzaW9uLlZpZGVvID0gUmlzZVZpc2lvbi5WaWRlbyB8fCB7fTtcblxuUmlzZVZpc2lvbi5WaWRlby5QbGF5ZXIgPSAoZnVuY3Rpb24gKGRvY3VtZW50LCAkKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBfdmlkZW9VcmwgPSBudWxsLFxuICAgIF9yaXNlQ2FjaGVSdW5uaW5nID0gdHJ1ZSxcbiAgICAvL19yZWZyZXNoRHVyYXRpb24gPSA5MDAwMDAsIC8vIDE1IG1pbnV0ZXNcbiAgICBfaXNTdG9yYWdlRmlsZSA9IGZhbHNlLFxuICAgIC8vX3JlZnJlc2hXYWl0aW5nID0gZmFsc2UsXG4gICAgX25vdGlmaWVkUmVhZHkgPSBmYWxzZTsvLyxcbiAgICAvL19zZXBhcmF0b3IgPSBcIlwiLFxuICAgIC8vX25ld1N0b3JhZ2VGaWxlID0gbnVsbDtcblxuICAvKlxuICAgKiBQcml2YXRlIE1ldGhvZHNcbiAgICovXG4gIC8qZnVuY3Rpb24gX2dldFZpZGVvRmlsZVR5cGUoKSB7XG4gICAgdmFyIHR5cGUgPSBfdmlkZW9Vcmwuc3Vic3RyKF92aWRlb1VybC5sYXN0SW5kZXhPZihcIi5cIikgKyAxKTtcblxuICAgIGlmICh0eXBlID09PSBcIm9ndlwiKSB7XG4gICAgICB0eXBlID0gXCJvZ2dcIjtcbiAgICB9XG5cbiAgICByZXR1cm4gdHlwZTtcbiAgfSovXG5cbiAgZnVuY3Rpb24gX29uQ2FuUGxheVRocm91Z2goKSB7XG4gICAgY29uc29sZS5sb2coXCJwbGF5ZXI6Ol9vbkNhblBsYXlUaHJvdWdoXCIpO1xuICAgIHZhciB2aWRlbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlkZW9cIik7XG5cbiAgICAvLyByZW1vdmUgdGhpcyBsaXN0ZW5lclxuICAgIHZpZGVvLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjYW5wbGF5dGhyb3VnaFwiLCBfb25DYW5QbGF5VGhyb3VnaCwgZmFsc2UpO1xuXG4gICAgLy8gb25seSBjYWxsIHBsYXllclJlYWR5KCkgb25jZVxuICAgIGlmICghX25vdGlmaWVkUmVhZHkpIHtcbiAgICAgIFJpc2VWaXNpb24uVmlkZW8ucGxheWVyUmVhZHkoKTtcbiAgICAgIF9ub3RpZmllZFJlYWR5ID0gdHJ1ZTtcblxuICAgICAgLyppZiAoIV9pc1N0b3JhZ2VGaWxlKSB7XG4gICAgICAgIC8vIGNhbGwgdGhlIHJlZnJlc2ggdGltZXIgZnVuY3Rpb24gZm9yIGEgbm9uLXN0b3JhZ2UgdmlkZW9cbiAgICAgICAgX3JlZnJlc2hUaW1lcihfcmVmcmVzaER1cmF0aW9uKTtcbiAgICAgIH0qL1xuICAgIH1cblxuICAgIC8qaWYgKF9yZWZyZXNoV2FpdGluZykge1xuICAgICAgLy8gcmVmcmVzaCBoYXBwZW5lZCBhZnRlciBhIHZpZGVvIGZpbmlzaGVkIHBsYXlpbmcgaW5zdGVhZCBvZiBpbW1lZGlhdGVseSwgbm90aWZ5IHZpZXdlciB0aGF0IHZpZGVvIGVuZGVkXG4gICAgICBfcmVmcmVzaFdhaXRpbmcgPSBmYWxzZTtcblxuICAgICAgUmlzZVZpc2lvbi5WaWRlby52aWRlb0VuZGVkKCk7XG5cbiAgICAgIGlmICghX2lzU3RvcmFnZUZpbGUpIHtcbiAgICAgICAgLy8gY2FsbCB0aGUgcmVmcmVzaCB0aW1lciBmdW5jdGlvbiBmb3IgYSBub24tc3RvcmFnZSB2aWRlb1xuICAgICAgICBfcmVmcmVzaFRpbWVyKF9yZWZyZXNoRHVyYXRpb24pO1xuICAgICAgfVxuICAgIH0qL1xuXG4gIH1cblxuICBmdW5jdGlvbiBfb25FbmRlZCgpIHtcbiAgICBjb25zb2xlLmxvZyhcInBsYXllcjo6X29uRW5kZWRcIik7XG4gICAgdmFyIHZpZGVvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWRlb1wiKSxcbiAgICAgIHN0YXJ0VGltZTsvKixcbiAgICAgIHNvdXJjZSA9IHZpZGVvLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic291cmNlXCIpWzBdOyovXG5cbiAgICAvKmlmIChzb3VyY2UuZ2V0QXR0cmlidXRlKFwic3JjXCIpICE9PSBcIlwiKSB7XG4gICAgICBzb3VyY2Uuc2V0QXR0cmlidXRlKFwic3JjXCIsIFwiXCIpO1xuICAgIH0qL1xuXG4gICAgLyppZiAoX3JlZnJlc2hXYWl0aW5nKSB7XG4gICAgICBfcmVmcmVzaCgpO1xuICAgIH0gZWxzZSB7Ki9cbiAgICB2aWRlby5wYXVzZSgpO1xuICAgIHN0YXJ0VGltZSA9IHZpZGVvLnNlZWthYmxlLnN0YXJ0KDApO1xuICAgIGNvbnNvbGUuZGVidWcoc3RhcnRUaW1lKTtcbiAgICB2aWRlby5jdXJyZW50VGltZSA9IHN0YXJ0VGltZTtcbiAgICB2aWRlby5wYXVzZSgpO1xuICAgICAgUmlzZVZpc2lvbi5WaWRlby52aWRlb0VuZGVkKCk7XG4gICAgLy99XG4gIH1cblxuICBmdW5jdGlvbiBfb25SaXNlU3RvcmFnZVJlc3BvbnNlKGUpIHtcbiAgICBjb25zb2xlLmxvZyhcInBsYXllcjo6X29uUmlzZVN0b3JhZ2VSZXNwb25zZVwiKTtcbiAgICBjb25zb2xlLmRpcihlKTtcbiAgICB2YXIgdmlkZW8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZGVvXCIpLyosXG4gICAgICBzb3VyY2UqLztcblxuICAgIC8qaWYgKHZpZGVvKSB7XG4gICAgICBzb3VyY2UgPSB2aWRlby5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNvdXJjZVwiKVswXTtcbiAgICB9Ki9cblxuICAgIGlmIChlLmRldGFpbCAmJiBlLmRldGFpbC5maWxlcyAmJiBlLmRldGFpbC5maWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICAvKmlmIChfbm90aWZpZWRSZWFkeSkge1xuICAgICAgICAvLyB0aGlzIGlzIGEgcmVmcmVzaCwgc3RvcmUgdGhlIG5ldyBmaWxlIHVybFxuICAgICAgICBfbmV3U3RvcmFnZUZpbGUgPSBlLmRldGFpbC5maWxlc1swXS51cmw7XG5cbiAgICAgICAgaWYgKHZpZGVvICYmIHZpZGVvLnBhdXNlZCAmJiB2aWRlby5jdXJyZW50VGltZSA8PSAwKSB7XG4gICAgICAgICAgLy8gcmVmcmVzaCBpbW1lZGlhdGVseVxuICAgICAgICAgIF9yZWZyZXNoKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3JlZnJlc2hXYWl0aW5nID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICB9IGVsc2UgeyovXG4gICAgICAgIC8vIHRoaXMgaXMgbm90IGEgcmVmcmVzaCBhcyB0aGUgd2lkZ2V0IGhhcyBub3Qgbm90aWZpZWQgVmlld2VyIHRoYXQgaXRzIHJlYWR5IHlldFxuICAgICAgICAvL3NvdXJjZS5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgZS5kZXRhaWwuZmlsZXNbMF0udXJsKTtcbiAgICAgICAgdmlkZW8uc2V0QXR0cmlidXRlKFwic3JjXCIsIGUuZGV0YWlsLmZpbGVzWzBdLnVybCk7XG4gICAgICAgIHZpZGVvLmxvYWQoKTtcbiAgICAgIC8vfVxuXG4gICAgfVxuXG4gIH1cblxuICAvKmZ1bmN0aW9uIF9yZWZyZXNoKCkge1xuICAgIHZhciB2aWRlbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlkZW9cIiksXG4gICAgICBzb3VyY2UgPSB2aWRlby5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNvdXJjZVwiKVswXTtcblxuICAgIHZpZGVvLmFkZEV2ZW50TGlzdGVuZXIoXCJjYW5wbGF5dGhyb3VnaFwiLCBfb25DYW5QbGF5VGhyb3VnaCwgZmFsc2UpO1xuXG4gICAgaWYgKF9pc1N0b3JhZ2VGaWxlKSB7XG4gICAgICBzb3VyY2Uuc2V0QXR0cmlidXRlKFwic3JjXCIsIF9uZXdTdG9yYWdlRmlsZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHNldCBuZXcgc3JjIHZhbHVlIHdpdGggYSBjYWNoZWJ1c3RlclxuICAgICAgc291cmNlLnNldEF0dHJpYnV0ZShcInNyY1wiLCBfdmlkZW9VcmwgKyBfc2VwYXJhdG9yICsgXCJjYj1cIiArIG5ldyBEYXRlKCkuZ2V0VGltZSgpKTtcbiAgICB9XG5cbiAgICB2aWRlby5sb2FkKCk7XG4gIH0qL1xuXG4gIC8qZnVuY3Rpb24gX3JlZnJlc2hUaW1lcihkdXJhdGlvbikge1xuICAgIHZhciB2aWRlbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlkZW9cIik7XG5cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcblxuICAgICAgaWYgKHZpZGVvICYmIHZpZGVvLnBhdXNlZCAmJiB2aWRlby5jdXJyZW50VGltZSA8PSAwKSB7XG4gICAgICAgIC8vIE9ubHkgcmVmcmVzaGluZyBpbW1lZGlhdGVseSB3aGVuIGluIGEgcGF1c2VkIHN0YXRlIGFuZCB0aGUgdmlkZW8gaXMgYXQgdGhlIGJlZ2lubmluZ1xuICAgICAgICBfcmVmcmVzaChmYWxzZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfcmVmcmVzaFdhaXRpbmcgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgfSwgZHVyYXRpb24pO1xuICB9Ki9cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGluaXQoZGF0YSkge1xuICAgIGNvbnNvbGUubG9nKFwicGxheWVyOjppbml0XCIpO1xuICAgIHZhciB2aWRlbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlkZW9cIiksXG4gICAgICBzdG9yYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWRlb1N0b3JhZ2VcIik7Ly8sXG4gICAgLypzb3VyY2UsIHN0ciovXG5cbiAgICBpZiAoIXZpZGVvIHx8ICFzdG9yYWdlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgX3ZpZGVvVXJsID0gKF9yaXNlQ2FjaGVSdW5uaW5nKSA/IFwiaHR0cDovL2xvY2FsaG9zdDo5NDk0Lz91cmw9XCIgKyBlbmNvZGVVUklDb21wb25lbnQoZGF0YS51cmwpIDogZGF0YS51cmw7XG5cbiAgICAvLyB1c2UgZGVmYXVsdCBjb250cm9scyBpZiBub3Qgc2V0IHRvIGF1dG9wbGF5XG4gICAgaWYgKCFkYXRhLnZpZGVvLmF1dG9wbGF5KSB7XG4gICAgICB2aWRlby5zZXRBdHRyaWJ1dGUoXCJjb250cm9sc1wiLCBcIlwiKTtcbiAgICB9XG5cbiAgICAvLyBzZXQgYXBwcm9wcmlhdGUgc2l6aW5nIGNsYXNzIGJhc2VkIG9uIHNjYWxlVG9GaXQgdmFsdWVcbiAgICB2aWRlby5jbGFzc05hbWUgPSBkYXRhLnZpZGVvLnNjYWxlVG9GaXQgPyB2aWRlby5jbGFzc05hbWUgKyBcIiBzY2FsZS10by1maXRcIlxuICAgICAgOiB2aWRlby5jbGFzc05hbWUgKyBcIiBuby1zY2FsZVwiO1xuXG4gICAgLy8gc2V0IGluaXRpYWwgdm9sdW1lIG9uIDx2aWRlbz5cbiAgICB2aWRlby52b2x1bWUgPSBkYXRhLnZpZGVvLnZvbHVtZSAvIDEwMDtcblxuICAgIC8vc291cmNlID0gdmlkZW8uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzb3VyY2VcIilbMF07XG5cbiAgICAvLyBzZXQgdGhlIFwidHlwZVwiIGF0dHJpYnV0ZSBvbiA8c291cmNlPlxuICAgIC8vc291cmNlLnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJ2aWRlby9cIiArIF9nZXRWaWRlb0ZpbGVUeXBlKCkpO1xuXG4gICAgLy8gdmlkZW8gZXZlbnRzXG4gICAgdmlkZW8uYWRkRXZlbnRMaXN0ZW5lcihcImNhbnBsYXl0aHJvdWdoXCIsIF9vbkNhblBsYXlUaHJvdWdoLCBmYWxzZSk7XG5cbiAgICBfaXNTdG9yYWdlRmlsZSA9IChPYmplY3Qua2V5cyhkYXRhLnZpZGVvU3RvcmFnZSkubGVuZ3RoICE9PSAwKTtcblxuICAgIGlmICghX2lzU3RvcmFnZUZpbGUpIHtcbiAgICAgIC8vc3RyID0gX3ZpZGVvVXJsLnNwbGl0KFwiP1wiKTtcblxuICAgICAgLy8gc3RvcmUgdGhpcyBmb3IgdGhlIHJlZnJlc2ggdGltZXJcbiAgICAgIC8vX3NlcGFyYXRvciA9IChzdHIubGVuZ3RoID09PSAxKSA/IFwiP1wiIDogXCImXCI7XG5cbiAgICAgIC8vdmlkZW8uc2V0QXR0cmlidXRlKFwicHJlbG9hZFwiLCBcImF1dG9cIik7XG5cbiAgICAgIC8vIE5vbiBzdG9yYWdlIFVSTFxuICAgICAgLy9zb3VyY2Uuc2V0QXR0cmlidXRlKFwic3JjXCIsIF92aWRlb1VybCk7XG4gICAgICB2aWRlby5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgX3ZpZGVvVXJsKTtcblxuICAgICAgdmlkZW8ubG9hZCgpO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vdmlkZW8uc2V0QXR0cmlidXRlKFwicHJlbG9hZFwiLCBcIm5vbmVcIik7XG5cbiAgICAgIC8vIFJpc2UgU3RvcmFnZVxuICAgICAgc3RvcmFnZS5hZGRFdmVudExpc3RlbmVyKFwicmlzZS1zdG9yYWdlLXJlc3BvbnNlXCIsIF9vblJpc2VTdG9yYWdlUmVzcG9uc2UpO1xuXG4gICAgICBzdG9yYWdlLnNldEF0dHJpYnV0ZShcImZvbGRlclwiLCBkYXRhLnZpZGVvU3RvcmFnZS5mb2xkZXIpO1xuICAgICAgc3RvcmFnZS5zZXRBdHRyaWJ1dGUoXCJmaWxlTmFtZVwiLCBkYXRhLnZpZGVvU3RvcmFnZS5maWxlTmFtZSk7XG4gICAgICBzdG9yYWdlLnNldEF0dHJpYnV0ZShcImNvbXBhbnlJZFwiLCBkYXRhLnZpZGVvU3RvcmFnZS5jb21wYW55SWQpO1xuICAgICAgc3RvcmFnZS5nbygpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGlzVmlkZW9QbGF5aW5nKCkge1xuICAgIHZhciB2aWRlbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlkZW9cIik7XG5cbiAgICByZXR1cm4gKHZpZGVvICYmIHR5cGVvZih2aWRlby5wYXVzZSkgIT09IFwidW5kZWZpbmVkXCIgJiYgIXZpZGVvLnBhdXNlZCAmJiAhdmlkZW8uZW5kZWQpID8gdHJ1ZSA6IGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gcGF1c2UoKSB7XG4gICAgY29uc29sZS5sb2coXCJwbGF5ZXI6OnBhdXNlKClcIik7XG4gICAgdmFyIHZpZGVvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWRlb1wiKTtcblxuICAgIGlmICh2aWRlbyAmJiB0eXBlb2YodmlkZW8ucGF1c2UpICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB2aWRlby5yZW1vdmVFdmVudExpc3RlbmVyKFwiZW5kZWRcIiwgX29uRW5kZWQsIGZhbHNlKTtcbiAgICAgIGlmIChpc1ZpZGVvUGxheWluZygpKSB7XG4gICAgICAgIHZpZGVvLnBhdXNlKCk7XG4gICAgICB9XG5cbiAgICB9XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIHBpbmcoZGF0YSl7XG4gICAgY29uc29sZS5sb2coXCJwbGF5ZXI6OnBpbmcoKVwiKTtcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiBcImh0dHA6Ly9sb2NhbGhvc3Q6OTQ5NC9waW5nXCIsXG4gICAgICBjYWNoZTogZmFsc2UsXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbigpe1xuICAgICAgICBpbml0KGRhdGEpO1xuICAgICAgfSxcbiAgICAgIGVycm9yOiBmdW5jdGlvbigpe1xuICAgICAgICAvLyByaXNlIGNhY2hlIG5vdCBydW5uaW5nXG4gICAgICAgIF9yaXNlQ2FjaGVSdW5uaW5nID0gZmFsc2U7XG4gICAgICAgIGluaXQoZGF0YSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIHBsYXkoKSB7XG4gICAgY29uc29sZS5sb2coXCJwbGF5ZXI6OnBsYXkoKVwiKTtcbiAgICB2YXIgdmlkZW8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZGVvXCIpO1xuXG4gICAgaWYgKHZpZGVvICYmIHR5cGVvZih2aWRlby5wYXVzZSkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHZpZGVvLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRlZFwiLCBfb25FbmRlZCwgZmFsc2UpO1xuICAgICAgdmlkZW8ucGxheSgpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgXCJpbml0XCI6IGluaXQsXG4gICAgXCJwYXVzZVwiOiBwYXVzZSxcbiAgICBcInBsYXlcIjogcGxheSxcbiAgICBcImlzVmlkZW9QbGF5aW5nXCI6IGlzVmlkZW9QbGF5aW5nLFxuICAgIFwicGluZ1wiOiBwaW5nXG4gIH07XG59KShkb2N1bWVudCwgalF1ZXJ5KTtcblxuLyogZ2xvYmFsIGdhZGdldHMsIFJpc2VWaXNpb24gKi9cblxuKGZ1bmN0aW9uICh3aW5kb3csIGdhZGdldHMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIHByZWZzID0gbmV3IGdhZGdldHMuUHJlZnMoKSxcbiAgICBpZCA9IHByZWZzLmdldFN0cmluZyhcImlkXCIpO1xuXG4gIC8vIERpc2FibGUgY29udGV4dCBtZW51IChyaWdodCBjbGljayBtZW51KVxuICB3aW5kb3cub25jb250ZXh0bWVudSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgZnVuY3Rpb24gcGxheSgpIHtcbiAgICBSaXNlVmlzaW9uLlZpZGVvLnBsYXkoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhdXNlKCkge1xuICAgIFJpc2VWaXNpb24uVmlkZW8ucGF1c2UoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgUmlzZVZpc2lvbi5WaWRlby5zdG9wKCk7XG4gIH1cblxuICBmdW5jdGlvbiBhZGRpdGlvbmFsUGFyYW1zKG5hbWVzLCB2YWx1ZXMpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShuYW1lcykgJiYgbmFtZXMubGVuZ3RoID4gMCAmJiBuYW1lc1swXSA9PT0gXCJhZGRpdGlvbmFsUGFyYW1zXCIpIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlcykgJiYgdmFsdWVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgUmlzZVZpc2lvbi5WaWRlby5zZXRBZGRpdGlvbmFsUGFyYW1zKEpTT04ucGFyc2UodmFsdWVzWzBdKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJwb2x5bWVyLXJlYWR5XCIsIGZ1bmN0aW9uKCkge1xuICAgIGlmIChpZCAmJiBpZCAhPT0gXCJcIikge1xuICAgICAgZ2FkZ2V0cy5ycGMucmVnaXN0ZXIoXCJyc2NtZF9wbGF5X1wiICsgaWQsIHBsYXkpO1xuICAgICAgZ2FkZ2V0cy5ycGMucmVnaXN0ZXIoXCJyc2NtZF9wYXVzZV9cIiArIGlkLCBwYXVzZSk7XG4gICAgICBnYWRnZXRzLnJwYy5yZWdpc3RlcihcInJzY21kX3N0b3BfXCIgKyBpZCwgc3RvcCk7XG5cbiAgICAgIGdhZGdldHMucnBjLnJlZ2lzdGVyKFwicnNwYXJhbV9zZXRfXCIgKyBpZCwgYWRkaXRpb25hbFBhcmFtcyk7XG4gICAgICBnYWRnZXRzLnJwYy5jYWxsKFwiXCIsIFwicnNwYXJhbV9nZXRcIiwgbnVsbCwgaWQsIFtcImFkZGl0aW9uYWxQYXJhbXNcIl0pO1xuXG4gICAgfVxuICB9KTtcblxufSkod2luZG93LCBnYWRnZXRzKTtcblxuXG5cbi8qIGpzaGludCBpZ25vcmU6c3RhcnQgKi9cbnZhciBfZ2FxID0gX2dhcSB8fCBbXTtcblxuX2dhcS5wdXNoKFsnX3NldEFjY291bnQnLCAnVUEtNTcwOTIxNTktMiddKTtcbl9nYXEucHVzaChbJ190cmFja1BhZ2V2aWV3J10pO1xuXG4oZnVuY3Rpb24oKSB7XG4gIHZhciBnYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOyBnYS50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7IGdhLmFzeW5jID0gdHJ1ZTtcbiAgZ2Euc3JjID0gKCdodHRwczonID09IGRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sID8gJ2h0dHBzOi8vc3NsJyA6ICdodHRwOi8vd3d3JykgKyAnLmdvb2dsZS1hbmFseXRpY3MuY29tL2dhLmpzJztcbiAgdmFyIHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07IHMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZ2EsIHMpO1xufSkoKTtcbi8qIGpzaGludCBpZ25vcmU6ZW5kICovXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=