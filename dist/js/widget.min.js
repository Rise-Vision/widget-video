if("undefined"==typeof config){var config={SKIN:"skin/RVSkin.xml"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e){"use strict";function t(){e.rpc.call("","rsevent_done",null,h.getString("id"))}function n(){e.rpc.call("","rsevent_ready",null,h.getString("id"),!0,!0,!0,!0,!0)}function i(){b=new RiseVision.Common.Video.FrameController,b.add(0),V=0,I=1,b.createFramePlayer(0,y,v,config.SKIN,"player.html")}function o(e){b.remove(e,function(){b.add(e),b.hide(e),b.createFramePlayer(e,y,v,config.SKIN,"player.html")})}function r(){var e,t=b.getFrameObject(V),n=0===V?1:0;A||(clearTimeout(E),E=null),t&&(y.video.controls||(e=t.getPlaybackData(),e.duration-e.position>=15&&o(n)))}function a(e){clearTimeout(E),E=setTimeout(function(){v=y.url+w+"cb="+(new Date).getTime(),r()},e)}function s(e){v=e,i()}function c(e){v=e,r()}function l(){var e=b.getFrameObject(V);e&&e.pause()}function u(){var e=b.getFrameObject(V);_?t():e?e.play():(V=0===V?1:0,e=b.getFrameObject(V),e.play(),A||E||a(C),b.add(0===V?1:0),b.hide(0===V?1:0),b.createFramePlayer(0===V?1:0,y,v,config.SKIN,"player.html"))}function d(){_?(b.remove(V),b.remove(0===V?1:0),t()):(b.show(0===V?1:0),b.remove(V,function(){t()}))}function m(){S||(2===I?(S=!0,A||a(C),n()):(b.add(1),b.hide(1),I=2,b.createFramePlayer(1,y,v,config.SKIN,"player.html")))}function f(t,n){var o;Array.isArray(t)&&t.length>0&&"additionalParams"===t[0]&&Array.isArray(n)&&n.length>0&&(y=JSON.parse(n[0]),h=new e.Prefs,document.getElementById("videoContainer").style.height=h.getInt("rsH")+"px",y.width=h.getInt("rsW"),y.height=h.getInt("rsH"),A=0!==Object.keys(y.storage).length,A?(R=new RiseVision.Video.Storage(y),R.init()):(o=y.url.split("?"),w=1===o.length?"?":"&",v=y.url,i()))}function g(e){console.debug("video-folder::playerError()",e),S?(_=!0,A||(clearTimeout(E),E=null)):b.remove(V)}function p(){l()}var y,v,V,h=null,R=null,b=null,S=!1,_=!1,A=!1,I=0,w="",C=3e5,E=null;return{onStorageInit:s,onStorageRefresh:c,pause:l,play:u,setAdditionalParams:f,playerEnded:d,playerReady:m,playerError:g,stop:p}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Storage=function(e){"use strict";function t(){var t=document.getElementById("videoStorage");t&&(t.addEventListener("rise-storage-response",function(e){var t;e.detail&&e.detail.files&&e.detail.files.length>0&&(t=e.detail.files[0].url,n?(n=!1,RiseVision.Video.onStorageInit(t)):RiseVision.Video.onStorageRefresh(t))}),t.setAttribute("folder",e.storage.folder),t.setAttribute("fileName",e.storage.fileName),t.setAttribute("companyId",e.storage.companyId),t.go())}var n=!0;return{init:t}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Video=RiseVision.Common.Video||{},RiseVision.Common.Video.FrameController=function(){"use strict";function e(e){return document.getElementById(c+e)}function t(t){var n,i=e(t);return n=i.querySelector("iframe"),n?n.contentWindow?n.contentWindow:n.contentDocument.document?n.contentDocument.document:n.contentDocument:null}function n(n){var i,o=e(n),r=t(n);r&&(i=o.querySelector("iframe"),r.remove(),i.setAttribute("src","about:blank"))}function i(t){var n=e(t),i=document.createElement("iframe");i.setAttribute("allowTransparency",!0),i.setAttribute("frameborder","0"),i.setAttribute("scrolling","no"),n.appendChild(i)}function o(n,i,o,r,a){var s,c=e(n),l=t(n);l&&(s=c.querySelector("iframe"),s.onload=function(){s.onload=null,l.init(i,o,r),l.load()},s.setAttribute("src",a))}function r(t){var n=e(t);n.style.visibility="hidden"}function a(e,t){var i=document.getElementById(c+e);n(e),setTimeout(function(){for(;i.firstChild;)i.removeChild(i.firstChild);t&&"function"==typeof t&&t()},200)}function s(t){var n=e(t);n.style.visibility="visible"}var c="if_";return{add:i,createFramePlayer:o,getFrameContainer:e,getFrameObject:t,hide:r,remove:a,show:s}},function(e,t){"use strict";function n(){RiseVision.Video.play()}function i(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}function r(){e.removeEventListener("polymer-ready",r),s&&""!==s&&(t.rpc.register("rscmd_play_"+s,n),t.rpc.register("rscmd_pause_"+s,i),t.rpc.register("rscmd_stop_"+s,o),t.rpc.register("rsparam_set_"+s,RiseVision.Video.setAdditionalParams),t.rpc.call("","rsparam_get",null,s,["additionalParams"]))}var a=new t.Prefs,s=a.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("polymer-ready",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,