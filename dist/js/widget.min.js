var WIDGET_COMMON_CONFIG={AUTH_PATH_URL:"v1/widget/auth",LOGGER_CLIENT_ID:"1088527147109-6q1o2vtihn34292pjt4ckhmhck0rk0o7.apps.googleusercontent.com",LOGGER_CLIENT_SECRET:"nlZyrcPLg6oEwO9f9Wfn29Wh",LOGGER_REFRESH_TOKEN:"1/xzt4kwzE1H7W9VnKB8cAaCx6zb4Es4nKEoqaYHdTD15IgOrJDtdun6zK6XiATCKT",STORAGE_ENV:"prod",STORE_URL:"https://store-dot-rvaserver2.appspot.com/"},RiseVision=RiseVision||{};if(RiseVision.Common=RiseVision.Common||{},RiseVision.Common.LoggerUtils=function(e){"use strict";function t(e,t){Array.isArray(e)&&e.length>0&&Array.isArray(t)&&t.length>0&&("companyId"===e[0]&&(l=t[0]),"displayId"===e[1]&&(a=t[1]?t[1]:"preview"),u(l,a))}function n(n){n&&"function"==typeof n&&(u=n,l&&a?u(l,a):s&&""!==s&&(e.rpc.register("rsparam_set_"+s,t),e.rpc.call("","rsparam_get",null,s,["companyId","displayId"])))}function i(e){var t,n=/[?#&]/;return e&&"string"==typeof e?(t=e.substr(e.lastIndexOf(".")+1),n.test(t)&&(t=t.substr(0,-1!==t.indexOf("?")?t.indexOf("?"):t.length),t=t.substr(0,-1!==t.indexOf("#")?t.indexOf("#"):t.length),t=t.substr(0,-1!==t.indexOf("&")?t.indexOf("&"):t.length)),t.toLowerCase()):null}function o(e){var t=JSON.parse(JSON.stringify(d));return t.rows[0].insertId=Math.random().toString(36).substr(2).toUpperCase(),t.rows[0].json=JSON.parse(JSON.stringify(e)),t.rows[0].json.ts=(new Date).toISOString(),t}function r(e){var t=new Date,n=t.getUTCFullYear(),i=t.getUTCMonth()+1,o=t.getUTCDate();return 10>i&&(i="0"+i),10>o&&(o="0"+o),e+n+i+o}var s=(new e.Prefs).getString("id"),a="",l="",u=null,d={kind:"bigquery#tableDataInsertAllRequest",skipInvalidRows:!1,ignoreUnknownValues:!1,rows:[{insertId:""}]};return{getIds:n,getInsertData:o,getFileFormat:i,getTable:r}}(gadgets),RiseVision.Common.Logger=function(e){"use strict";function t(e){var t=new XMLHttpRequest;return new Date-u<358e4?e({}):(t.open("POST",o,!0),t.onloadend=function(){var n=JSON.parse(t.response);e({token:n.access_token,refreshedAt:new Date})},t.send(),void 0)}function n(e){return s&&l===e}function i(i,o){function c(t){var n,s,a=new XMLHttpRequest;s=r.replace("TABLE_ID",e.getTable(i)),u=t.refreshedAt||u,d=t.token||d,n=e.getInsertData(o),a.open("POST",s,!0),a.setRequestHeader("Content-Type","application/json"),a.setRequestHeader("Authorization","Bearer "+d),o.cb&&"function"==typeof o.cb&&(a.onloadend=function(){o.cb(a.response)}),a.send(JSON.stringify(n))}if(i&&o&&o.event&&!n(o.event))return s=!0,l=o.event,setTimeout(function(){s=!1},a),t(c)}var o="https://www.googleapis.com/oauth2/v3/token?client_id="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_ID+"&client_secret="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_SECRET+"&refresh_token="+WIDGET_COMMON_CONFIG.LOGGER_REFRESH_TOKEN+"&grant_type=refresh_token",r="https://www.googleapis.com/bigquery/v2/projects/client-side-events/datasets/Widget_Events/tables/TABLE_ID/insertAll",s=!1,a=1e3,l="",u=0,d="";return{log:i}}(RiseVision.Common.LoggerUtils),"undefined"==typeof config){var config={SKIN:"skin/RVSkin.xml",STORAGE_ENV:"prod"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e){"use strict";function t(){e.rpc.call("","rsevent_done",null,R.getString("id")),null!==L&&l(L,!0),l({event:"done"},!1)}function n(){e.rpc.call("","rsevent_ready",null,R.getString("id"),!0,!0,!0,!0,!0)}function i(){clearTimeout(N),N=null}function o(){i(),N=setTimeout(function(){t()},5e3)}function r(e){A=setInterval(function(){S=h.url+b+"cb="+(new Date).getTime(),C=!1,L=null},e)}function s(e,t){var n={},i=RiseVision.Common.LoggerUtils,o=null;e.event&&(n.event=e.event),e.event_details&&(n.event_details=e.event_details),e.url?o=e.url:S&&(o=S),n.file_url=o,n.file_format=i.getFileFormat(o),i.getIds(function(e,i){n.company_id=e,n.display_id=i,t(n)})}function a(e){D=!0,_.show(e),E.remove(I,function(){O||o()})}function l(e,t){t&&(L=e),s(e,function(e){F.log("video_events",e)})}function u(e){S=e,_.hide(),O||g()}function d(e){S=e,C=!1,L=null}function c(){var e=E.getFrameObject(I);return O=!0,D?(i(),void 0):(e&&e.pause(),void 0)}function g(){var e=E.getFrameObject(I);return O=!1,l({event:"play"},!1),D?(o(),void 0):(C||(e?e.play():S&&""!==S&&(E.add(0),E.createFramePlayer(0,h,S,config.SKIN,"player.html"))),void 0)}function m(){E.remove(I,function(){t()})}function f(){var e;_.hide(),w||null!==A||r(T),O||(e=E.getFrameObject(I),e&&e.play())}function p(t,i){var o;Array.isArray(t)&&t.length>0&&"additionalParams"===t[0]&&Array.isArray(i)&&i.length>0&&(h=JSON.parse(i[0]),R=new e.Prefs,document.getElementById("videoContainer").style.height=R.getInt("rsH")+"px",h.width=R.getInt("rsW"),h.height=R.getInt("rsH"),_=new RiseVision.Common.Message(document.getElementById("videoContainer"),document.getElementById("messageContainer")),_.show("Please wait while your video is downloaded."),E=new RiseVision.Common.Video.FrameController,w=0!==Object.keys(h.storage).length,w?(V=new RiseVision.Video.Storage(h),V.init()):(o=h.url.split("?"),b=1===o.length?"?":"&",S=h.url),n())}function v(e){var t=null,n={};C=!0,e&&(e.type&&e.message?t=e.type+" - "+e.message:e.type?t=e.type:e.message&&(t=e.message)),n.event="player error",n.event_details=t,l(n,!0),a("Sorry, there was a problem playing the video.")}function y(){c()}var h,R=null,V=null,_=null,E=null,C=!1,w=!1,O=!0,I=0,b="",S="",T=9e5,A=null,L=null,N=null,D=!1,F=RiseVision.Common.Logger;return{logEvent:l,onStorageInit:u,onStorageRefresh:d,pause:c,play:g,setAdditionalParams:p,showError:a,playerEnded:m,playerReady:f,playerError:v,stop:y}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Storage=function(e){"use strict";function t(){var t=document.getElementById("videoStorage");t&&(t.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.url&&(n?(n=!1,RiseVision.Video.onStorageInit(e.detail.url)):e.detail.hasOwnProperty("changed")&&e.detail.changed&&RiseVision.Video.onStorageRefresh(e.detail.url))}),t.addEventListener("rise-storage-no-file",function(){var e={event:"storage file not found"};RiseVision.Video.logEvent(e,!0),RiseVision.Video.showError("The selected video does not exist.")}),t.addEventListener("rise-storage-error",function(){var e={event:"storage error"};RiseVision.Video.logEvent(e,!0),RiseVision.Video.showError("Sorry, there was a problem playing the video from Storage.")}),t.setAttribute("folder",e.storage.folder),t.setAttribute("fileName",e.storage.fileName),t.setAttribute("companyId",e.storage.companyId),t.setAttribute("env",config.STORAGE_ENV),t.go())}var n=!0;return{init:t}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Video=RiseVision.Common.Video||{},RiseVision.Common.Video.FrameController=function(){"use strict";function e(e){return document.getElementById(l+e)}function t(t){var n,i=e(t);return n=i.querySelector("iframe"),n?n.contentWindow?n.contentWindow:n.contentDocument.document?n.contentDocument.document:n.contentDocument:null}function n(n){var i,o=e(n),r=t(n);r&&(i=o.querySelector("iframe"),r.remove(),i.setAttribute("src","about:blank"))}function i(t){var n=e(t),i=document.createElement("iframe");i.setAttribute("allowTransparency",!0),i.setAttribute("frameborder","0"),i.setAttribute("scrolling","no"),n.appendChild(i)}function o(n,i,o,r,s){var a,l=e(n),u=t(n);u&&(a=l.querySelector("iframe"),a.onload=function(){a.onload=null,u.init(i,o,r),u.load()},a.setAttribute("src",s))}function r(t){var n=e(t);n.style.visibility="hidden"}function s(e,t){var i=document.getElementById(l+e);n(e),setTimeout(function(){for(;i.firstChild;)i.removeChild(i.firstChild);t&&"function"==typeof t&&t()},200)}function a(t){var n=e(t);n.style.visibility="visible"}var l="if_";return{add:i,createFramePlayer:o,getFrameContainer:e,getFrameObject:t,hide:r,remove:s,show:a}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,t){"use strict";function n(){try{t.style.height=e.style.height}catch(n){console.warn("Can't initialize Message - ",n.message)}}function i(){if(r){for(;t.firstChild;)t.removeChild(t.firstChild);t.style.display="none",e.style.visibility="visible",r=!1}}function o(n){var i,o=document.createDocumentFragment();r?(i=t.querySelector(".message"),i.innerHTML=n):(e.style.visibility="hidden",t.style.display="block",i=document.createElement("p"),i.innerHTML=n,i.setAttribute("class","message"),i.style.lineHeight=t.style.height,o.appendChild(i),t.appendChild(o),r=!0)}var r=!1;return n(),{hide:i,show:o}},function(e,t){"use strict";function n(){RiseVision.Video.play()}function i(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}function r(){e.removeEventListener("WebComponentsReady",r),a&&""!==a&&(t.rpc.register("rscmd_play_"+a,n),t.rpc.register("rscmd_pause_"+a,i),t.rpc.register("rscmd_stop_"+a,o),t.rpc.register("rsparam_set_"+a,RiseVision.Video.setAdditionalParams),t.rpc.call("","rsparam_get",null,a,["additionalParams"]))}var s=new t.Prefs,a=s.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("WebComponentsReady",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,
