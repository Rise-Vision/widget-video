if("undefined"==typeof config){var config={};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e,t){"use strict";function i(){t.rpc.call("","rsevent_done",null,u.getString("id"))}function n(){t.rpc.call("","rsevent_ready",null,u.getString("id"),!0,!0,!0,!0,!0)}function s(){p.pause()}function a(){p.isInitialPlay()?c.video.autoplay&&p.play():p.userPaused()||p.play()}function o(){n()}function r(i){u=new t.Prefs,c=i,e.getElementById("videoContainer").style.height=u.getInt("rsH")+"px",p=new RiseVision.Video.Player(c),p.init()}function d(){s()}function l(){i()}var u=null,c={},p=null;return{pause:s,play:a,setAdditionalParams:r,playerReady:o,stop:d,videoEnded:l}}(document,gadgets);var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Player=function(e){"use strict";function t(e){_.removeEventListener("rise-storage-response",t),e.detail&&e.detail.files&&e.detail.files.length>0&&(v.value=e.detail.files[0].url),V.setAttributeNode(v),E.appendChild(y)}function i(){var t=e.url.substr(e.url.lastIndexOf(".")+1);return"ogv"===t&&(t="ogg"),t}function n(){A.style.visibility="visible",E.removeEventListener("loadeddata",n,!1)}function s(){w=!0,N||(RiseVision.Video.playerReady(),N=!0),E.removeEventListener("canplay",s,!1),P||u(L)}function a(){b=!1,!P&&I&&(I=!1,l()),RiseVision.Video.videoEnded()}function o(){b=!h}function r(){R=!1,b=!1}function d(){setTimeout(function(){w?E.play():d()},200)}function l(){E.addEventListener("canplay",s,!1),E.addEventListener("loadeddata",n,!1),A.style.visibility="hidden",V.setAttribute("src",e.url+S+"cb="+(new Date).getTime()),w=!1,E.load()}function u(e){setTimeout(function(){E.paused&&E.currentTime<=0?l():I=!0},e)}function c(){return R}function p(){var d,l=document.createAttribute("type");y=document.createDocumentFragment(),V=y.appendChild(document.createElement("source")),v=document.createAttribute("src"),e.video.autoplay||E.setAttribute("controls",""),E.className=e.video.scaleToFit?E.className+" scale-to-fit":E.className+" no-scale",E.volume=e.video.volume/100,l.value="video/"+i(),V.setAttributeNode(l),E.addEventListener("loadeddata",n,!1),E.addEventListener("canplay",s,!1),E.addEventListener("ended",a,!1),E.addEventListener("pause",o,!1),E.addEventListener("play",r,!1),P=0!==Object.keys(e.storage).length,P?(_.addEventListener("rise-storage-response",t),_.setAttribute("folder",e.storage.folder),_.setAttribute("fileName",e.storage.fileName),_.setAttribute("companyId",e.storage.companyId),_.go()):(d=e.url.split("?"),S=1===d.length?"?":"&",v.value=e.url,V.setAttributeNode(v),E.appendChild(y))}function f(){h=!0,E.pause()}function g(){R=!1,h=!1,w?E.play():d()}function m(){return b}var v,y,V,E=document.getElementById("video"),A=document.getElementById("videoContainer"),_=document.getElementById("videoStorage"),R=!0,b=!1,h=!1,L=9e5,P=!1,I=!1,N=!1,w=!1,S="";return{isInitialPlay:c,init:p,pause:f,play:g,userPaused:m}},function(e,t){"use strict";function i(){RiseVision.Video.play()}function n(){RiseVision.Video.pause()}function s(){RiseVision.Video.stop()}function a(e,t){Array.isArray(e)&&e.length>0&&"additionalParams"===e[0]&&Array.isArray(t)&&t.length>0&&RiseVision.Video.setAdditionalParams(JSON.parse(t[0]))}var o=new t.Prefs,r=o.getString("id");e.oncontextmenu=function(){return!1},r&&""!==r&&(t.rpc.register("rscmd_play_"+r,i),t.rpc.register("rscmd_pause_"+r,n),t.rpc.register("rscmd_stop_"+r,s),t.rpc.register("rsparam_set_"+r,a),t.rpc.call("","rsparam_get",null,r,["additionalParams"]))}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,