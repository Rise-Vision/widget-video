if("undefined"==typeof config){var config={};"undefined"!=typeof angular&&(angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","components/rv-common-i18n/dist/locales/translation_").constant("LOCALES_SUFIX",".json"),angular.module("risevision.widget.common.storage-selector.config").value("STORAGE_MODAL","https://storage-stage.risevision.com/rva-test/dist/storage-modal.html#/files/"))}var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e,t){"use strict";function n(){t.rpc.call("","rsevent_done",null,l.getString("id"))}function i(){t.rpc.call("","rsevent_ready",null,l.getString("id"),!0,!0,!0,!0,!0)}function o(){p=new RiseVision.Video.Player(g),p.init()}function a(){p.pause()}function s(){p.isInitialPlay()?g.video.autoplay&&p.play():p.userPaused()||p.play()}function r(){i()}function d(n){l=new t.Prefs,g=n,e.getElementById("videoContainer").style.height=l.getInt("rsH")+"px",m=new RiseVision.Common.Background(g),m.init(o)}function u(){a()}function c(){n()}var l=null,g={},m=null,p=null;return{pause:a,play:s,setAdditionalParams:d,playerReady:r,stop:u,videoEnded:c}}(document,gadgets);var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Background=function(e){"use strict";function t(){s=!0,a&&"function"==typeof a&&a()}function n(e){d.removeEventListener("rise-storage-response",n),r.style.backgroundImage=Array.isArray(e.detail)?"url("+e.detail[0]+")":"url("+e.detail+")",t()}function i(){r=document.getElementById("background"),d=document.getElementById("backgroundStorage"),document.body.style.background=e.background.color,r?e.background.useImage?(r.className=e.background.image.position,r.className=e.background.image.scale?r.className+" scale-to-fit":r.className,0===Object.keys(e.backgroundStorage).length?(r.style.backgroundImage="url("+e.background.image.url+")",t()):d?(d.addEventListener("rise-storage-response",n),d.setAttribute("folder",e.backgroundStorage.folder),d.setAttribute("fileName",e.backgroundStorage.fileName),d.setAttribute("companyId",e.backgroundStorage.companyId),d.go()):console.log("Missing element with id value of 'backgroundStorage'")):t():console.log("Missing element with id value of 'background'")}function o(e){s?e&&"function"==typeof e&&e():(e&&(a=e),i())}var a=null,s=!1,r=null,d=null;return{init:o}};var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Player=function(e){"use strict";function t(e){E.removeEventListener("rise-storage-response",t),v.value=Array.isArray(e.detail)?e.detail[0]:e.detail,b.setAttributeNode(v),V.appendChild(y)}function n(){var t=e.url.substr(e.url.lastIndexOf(".")+1);return"ogv"===t&&(t="ogg"),t}function i(){A.style.visibility="visible",V.removeEventListener("loadeddata",i,!1)}function o(){N=!0,L||(RiseVision.Video.playerReady(),L=!0),V.removeEventListener("canplay",o,!1),I||c(h)}function a(){k=!1,!I&&S&&(S=!1,u()),RiseVision.Video.videoEnded()}function s(){k=!_}function r(){R=!1,k=!1}function d(){setTimeout(function(){N?V.play():d()},200)}function u(){V.addEventListener("canplay",o,!1),V.addEventListener("loadeddata",i,!1),A.style.visibility="hidden",b.setAttribute("src",e.url+w+"cb="+(new Date).getTime()),N=!1,V.load()}function c(e){setTimeout(function(){V.paused&&V.currentTime<=0?u():S=!0},e)}function l(){return R}function g(){var d,u=document.createAttribute("type");y=document.createDocumentFragment(),b=y.appendChild(document.createElement("source")),v=document.createAttribute("src"),e.video.autoplay||V.setAttribute("controls",""),V.className=e.video.scaleToFit?V.className+" scale-to-fit":V.className+" no-scale",V.volume=e.video.volume/100,u.value="video/"+n(),b.setAttributeNode(u),V.addEventListener("loadeddata",i,!1),V.addEventListener("canplay",o,!1),V.addEventListener("ended",a,!1),V.addEventListener("pause",s,!1),V.addEventListener("play",r,!1),I=0!==Object.keys(e.videoStorage).length,I?(E.addEventListener("rise-storage-response",t),E.setAttribute("folder",e.videoStorage.folder),E.setAttribute("fileName",e.videoStorage.fileName),E.setAttribute("companyId",e.videoStorage.companyId),E.go()):(d=e.url.split("?"),w=1===d.length?"?":"&",v.value=e.url,b.setAttributeNode(v),V.appendChild(y))}function m(){_=!0,V.pause()}function p(){R=!1,_=!1,N?V.play():d()}function f(){return k}var v,y,b,V=document.getElementById("video"),A=document.getElementById("videoContainer"),E=document.getElementById("videoStorage"),R=!0,k=!1,_=!1,h=9e5,I=!1,S=!1,L=!1,N=!1,w="";return{isInitialPlay:l,init:g,pause:m,play:p,userPaused:f}},function(e,t){"use strict";function n(){RiseVision.Video.play()}function i(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}function a(e,t){Array.isArray(e)&&e.length>0&&"additionalParams"===e[0]&&Array.isArray(t)&&t.length>0&&RiseVision.Video.setAdditionalParams(JSON.parse(t[0]))}var s=new t.Prefs,r=s.getString("id");e.oncontextmenu=function(){return!1},r&&""!==r&&(t.rpc.register("rscmd_play_"+r,n),t.rpc.register("rscmd_pause_"+r,i),t.rpc.register("rscmd_stop_"+r,o),t.rpc.register("rsparam_set_"+r,a),t.rpc.call("","rsparam_get",null,r,["additionalParams"]))}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,